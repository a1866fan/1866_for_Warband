# -*- coding: UTF-8 -*-
####################################################################################################################
# Generated by Warband Module Decompiler
# All rights of the module belong to their respective owners
####################################################################################################################

from header_common import *
from header_operations import *
from header_parties import *
from header_items import *
from header_skills import *
from header_triggers import *
from header_troops import *
from header_music import *

from module_constants import *

####################################################################################################################
# Simple triggers are the alternative to old style triggers. They do not preserve state, and thus simpler to maintain.
#
#  Each simple trigger contains the following fields:
# 1) Check interval: How frequently this trigger will be checked
# 2) Operation block: This must be a valid operation block. See header_operations.py for reference. 
####################################################################################################################

simple_triggers = [
  (ti_on_party_encounter,
  []),

  (ti_simulate_battle,
  []),

  (1,
  [
    (gt, "$auto_besiege_town", 0),
    (gt, "$g_player_besiege_town", 0),
    (ge, "$g_siege_method", 1),
    (store_current_hours, ":var0"),
    (eq, "$g_siege_force_wait", 0),
    (ge, ":var0", "$g_siege_method_finish_hours"),
    (neg|is_currently_night),
    (rest_for_hours, 0, 0, 0),
  ]),

  (0,
  [
    (eq, "$g_player_is_captive", 1),
    (gt, "$capturer_party", 0),
    (party_is_active, "$capturer_party"),
    (party_relocate_near_party, "p_main_party", "$capturer_party", 0),
  ]),

  (0,
  [
    (try_begin),
      (gt, "$g_last_rest_center", 0),
      (party_get_battle_opponent, ":var0", "$g_last_rest_center"),
      (gt, ":var0", 0),
      (store_faction_of_party, ":var1", "$g_last_rest_center"),
      (store_relation, ":var2", ":var1", "fac_player_supporters_faction"),
      (store_faction_of_party, ":var3", ":var0"),
      (store_relation, ":var4", ":var3", "fac_player_supporters_faction"),
      (ge, ":var2", 0),
      (lt, ":var4", 0),
      (start_encounter, "$g_last_rest_center"),
      (rest_for_hours, 0, 0, 0),
    (else_try),
      (store_current_hours, ":var5"),
      (assign, ":var6", 0),
      (try_begin),
        (neq, "$g_check_autos_at_hour", 0),
        (ge, ":var5", "$g_check_autos_at_hour"),
        (assign, ":var6", 1),
        (assign, "$g_check_autos_at_hour", 0),
      (try_end),
      (this_or_next|eq, ":var6", 1),
      (map_free),
      (try_begin),
        (ge, "$auto_menu", 1),
        (jump_to_menu, "$auto_menu"),
        (assign, "$auto_menu", -1),
      (else_try),
        (ge, "$auto_enter_town", 1),
        (start_encounter, "$auto_enter_town"),
      (else_try),
        (ge, "$auto_besiege_town", 1),
        (start_encounter, "$auto_besiege_town"),
      (else_try),
        (ge, "$g_camp_mode", 1),
        (assign, "$g_camp_mode", 0),
        (assign, "$g_player_icon_state", 0),
        (display_message, "@Breaking camp..."),
      (try_end),
    (try_end),
  ]),

  (0,
  [
    (troop_slot_ge, "trp_notification_menu_types", 0, 1),
    (troop_get_slot, ":var0", "trp_notification_menu_types", 0),
    (troop_get_slot, "$g_notification_menu_var1", "trp_notification_menu_var1", 0),
    (troop_get_slot, "$g_notification_menu_var2", "trp_notification_menu_var2", 0),
    (jump_to_menu, ":var0"),
    (assign, ":var1", 2),
    (try_for_range, ":var2", 1, ":var1"),
      (try_begin),
        (troop_slot_ge, "trp_notification_menu_types", ":var2", 1),
        (val_add, ":var1", 1),
      (try_end),
      (store_sub, ":var3", ":var2", 1),
      (troop_get_slot, ":var4", "trp_notification_menu_types", ":var2"),
      (troop_set_slot, "trp_notification_menu_types", ":var3", ":var4"),
      (troop_get_slot, ":var4", "trp_notification_menu_var1", ":var2"),
      (troop_set_slot, "trp_notification_menu_var1", ":var3", ":var4"),
      (troop_get_slot, ":var4", "trp_notification_menu_var2", ":var2"),
      (troop_set_slot, "trp_notification_menu_var2", ":var3", ":var4"),
    (try_end),
  ]),

  (1,
  [
    (map_free),
    (call_script, "script_music_set_situation_with_culture", 65536),
  ]),

  (1,
  [
    (ge, "$g_player_raiding_village", 1),
    (try_begin),
      (neq, "$g_player_is_captive", 0),
      (rest_for_hours, 0, 0, 0),
      (assign, "$g_player_raiding_village", 0),
    (else_try),
      (map_free),
      (assign, "$g_player_raiding_village", 0),
    (else_try),
      (this_or_next|party_slot_eq, "$g_player_raiding_village", 35, 2),
      (party_slot_eq, "$g_player_raiding_village", 35, 4),
      (start_encounter, "$g_player_raiding_village"),
      (rest_for_hours, 0),
      (assign, "$g_player_raiding_village", 0),
      (assign, "$g_player_raid_complete", 1),
    (else_try),
      (party_slot_eq, "$g_player_raiding_village", 35, 1),
      (rest_for_hours, 3, 5, 1),
    (else_try),
      (rest_for_hours, 0, 0, 0),
      (assign, "$g_player_raiding_village", 0),
      (assign, "$g_player_raid_complete", 0),
    (try_end),
  ]),

  (168,
  [
    (call_script, "script_calculate_player_faction_wage"),
    (assign, ":var0", reg0),
    (store_add, ":var1", ":var0", "$g_player_debt_to_party_members"),
    (try_begin),
      (gt, ":var1", 0),
      (jump_to_menu, "mnu_pay_day"),
    (try_end),
    (assign, "$g_cur_week_half_daily_wage_payments", 0),
  ]),

  (6,
  [
    (store_current_hours, ":var0"),
    (try_begin),
      (ge, ":var0", "$mercenary_service_next_pay_time"),
      (call_script, "script_party_calculate_strength", "p_main_party", 0),
      (assign, ":var1", reg0),
      (val_div, ":var1", 2),
      (val_add, ":var1", 30),
      (call_script, "script_round_value", ":var1"),
      (val_add, "$mercenary_service_accumulated_pay", reg0),
      (store_add, "$mercenary_service_next_pay_time", ":var0", 168),
    (try_end),
  ]),

  (24,
  [
    (le, "$auto_menu", 0),
    (gt, "$players_kingdom", 0),
    (neq, "$players_kingdom", "fac_player_supporters_faction"),
    (eq, "$player_has_homage", 0),
    (store_current_day, ":var0"),
    (gt, ":var0", "$mercenary_service_next_renew_day"),
    (jump_to_menu, "mnu_oath_fulfilled"),
  ]),

  (180,
  [
    (val_sub, "$g_player_luck", 1),
    (val_max, "$g_player_luck", 0),
  ]),

  (24,
  [
    (eq, "$g_player_banner_granted", 1),
    (troop_slot_eq, "trp_player", 13, 0),
    (le, "$auto_menu", 0),
    (start_presentation, "prsnt_banner_selection"),
  ]),

  (24,
  [
    (call_script, "script_get_player_party_morale_values"),
    (assign, ":var0", reg0),
    (party_get_morale, ":var1", "p_main_party"),
    (store_sub, ":var2", ":var0", ":var1"),
    (store_div, ":var3", ":var2", 5),
    (store_mul, ":var4", ":var3", 5),
    (try_begin),
      (neq, ":var4", ":var2"),
      (try_begin),
        (gt, ":var2", 0),
        (val_add, ":var3", 1),
      (else_try),
        (val_sub, ":var3", 1),
      (try_end),
    (try_end),
    (val_add, ":var1", ":var3"),
    (party_set_morale, "p_main_party", ":var1"),
  ]),

  (168,
  [
    (try_for_range, ":var0", "p_town_1", "p_salt_mine"),
      (party_get_num_prisoner_stacks, ":var1", ":var0"),
      (try_for_range_backwards, ":var2", 0, ":var1"),
        (party_prisoner_stack_get_troop_id, ":var3", ":var0", ":var2"),
        (neg|troop_is_hero, ":var3"),
        (party_prisoner_stack_get_size, ":var4", ":var0", ":var2"),
        (store_random_in_range, ":var5", 0, 40),
        (val_mul, ":var4", ":var5"),
        (val_div, ":var4", 100),
        (party_remove_prisoners, ":var0", ":var3", ":var4"),
      (try_end),
    (try_end),
  ]),

  (168,
  [
    (try_for_range, ":var0", "trp_kingdom_1_lord", "trp_knight_1_1_wife"),
      (troop_get_slot, ":var1", ":var0", 21),
      (val_mul, ":var1", 101),
      (val_div, ":var1", 100),
      (troop_set_slot, ":var0", 21, ":var1"),
      (call_script, "script_calculate_hero_weekly_net_income_and_add_to_wealth", ":var0"),
    (try_end),
    (try_for_range, ":var2", "p_town_1", "p_village_1"),
      (neg|party_slot_eq, ":var2", 7, "trp_player"),
      (party_slot_ge, ":var2", 7, 1),
      (party_get_slot, ":var3", ":var2", 49),
      (party_get_slot, ":var4", ":var2", 50),
      (try_begin),
        (is_between, ":var2", "p_town_1b", "p_castle_1"),
        (store_mul, ":var5", ":var4", 7),
        (val_add, ":var5", 300),
      (else_try),
        (store_mul, ":var5", ":var4", 15),
        (val_add, ":var5", 700),
      (try_end),
      (try_begin),
        (party_slot_eq, ":var2", 0, 3),
        (val_mul, ":var5", 3),
        (val_div, ":var5", 2),
      (try_end),
      (val_add, ":var3", ":var5"),
      (call_script, "script_calculate_weekly_party_wage", ":var2"),
      (val_sub, ":var3", reg0),
      (val_max, ":var3", 0),
      (party_set_slot, ":var2", 49, ":var3"),
    (try_end),
  ]),

  (24,
  [
    (try_for_range, ":var0", "trp_kingdom_1_lord", "trp_knight_1_1_wife"),
      (troop_get_slot, ":var1", ":var0", 10),
      (ge, ":var1", 1),
      (party_get_attached_to, ":var2", ":var1"),
      (is_between, ":var2", "p_town_1", "p_salt_mine"),
      (party_slot_eq, ":var2", 54, -1),
      (call_script, "script_hire_men_to_kingdom_hero_party", ":var0"),
    (try_end),
    (try_for_range, ":var3", "p_town_1", "p_village_1"),
      (neg|party_slot_eq, ":var3", 7, "trp_player"),
      (party_slot_ge, ":var3", 7, 1),
      (party_get_slot, ":var4", ":var3", 49),
      (party_slot_eq, ":var3", 54, -1),
      (assign, ":var5", ":var4"),
      (val_div, ":var5", 5),
      (gt, ":var5", 400),
      (call_script, "script_cf_reinforce_party", ":var3"),
      (val_sub, ":var4", 400),
      (party_set_slot, ":var3", 49, ":var4"),
    (try_end),
  ]),

  (360,
  [
    (try_for_range, ":var0", "p_town_1", "p_salt_mine"),
      (call_script, "script_get_center_ideal_prosperity", ":var0"),
      (assign, ":var1", reg0),
      (party_get_slot, ":var2", ":var0", 50),
      (try_begin),
        (gt, ":var2", ":var1"),
        (call_script, "script_change_center_prosperity", ":var0", -1),
      (else_try),
        (lt, ":var2", ":var1"),
        (call_script, "script_change_center_prosperity", ":var0", 1),
      (try_end),
    (try_end),
  ]),

  (6,
  [
    (store_current_day, ":var0"),
    (try_begin),
      (neq, ":var0", "$g_last_half_payment_check_day"),
      (assign, "$g_last_half_payment_check_day", ":var0"),
      (try_begin),
        (eq, "$g_half_payment_checkpoint", 1),
        (val_add, "$g_cur_week_half_daily_wage_payments", 1),
      (try_end),
      (assign, "$g_half_payment_checkpoint", 1),
    (try_end),
    (assign, ":var1", 0),
    (try_begin),
      (neg|map_free),
      (ge, "$g_last_rest_center", 0),
      (this_or_next|party_slot_eq, "$g_last_rest_center", 130, 1),
      (is_between, "$g_last_rest_center", "p_town_1", "p_village_1"),
      (assign, ":var1", 1),
    (try_end),
    (eq, ":var1", 0),
    (assign, "$g_half_payment_checkpoint", 0),
  ]),

  (48,
  [
    (try_for_range, ":var0", "trp_kingdom_1_lord", "trp_knight_1_1_wife"),
      (store_random_in_range, ":var1", 0, 100),
      (lt, ":var1", 30),
      (troop_get_slot, ":var2", ":var0", 10),
      (gt, ":var2", "p_salt_mine"),
      (party_is_active, ":var2"),
      (store_skill_level, ":var3", skl_trainer, ":var0"),
      (val_add, ":var3", 2),
      (store_mul, ":var4", ":var3", 500),
      (party_upgrade_with_xp, ":var2", ":var4"),
    (try_end),
    (try_for_range, ":var5", "p_town_1", "p_village_1"),
      (store_random_in_range, ":var1", 0, 100),
      (lt, ":var1", 10),
      (party_get_slot, ":var6", ":var5", 7),
      (neq, ":var6", "trp_player"),
      (party_upgrade_with_xp, ":var5", 3000),
    (try_end),
  ]),

  (24,
  [
    (call_script, "script_process_sieges"),
  ]),

  (2,
  [
    (call_script, "script_process_village_raids"),
  ]),

  (7,
  [
    (call_script, "script_init_ai_calculation"),
    (call_script, "script_decide_kingdom_party_ais"),
  ]),

  (24,
  [
    (val_add, "$g_election_date", 1),
    (ge, "$g_election_date", 90),
    (is_between, "$players_kingdom", "fac_player_supporters_faction", "fac_kingdoms_end"),
    (neq, "$players_kingdom", "fac_player_supporters_faction"),
    (assign, "$g_presentation_input", -1),
    (assign, "$g_presentation_marshall_selection_1_vote", 0),
    (assign, "$g_presentation_marshall_selection_2_vote", 0),
    (assign, "$g_presentation_marshall_selection_max_renown_1", -10000),
    (assign, "$g_presentation_marshall_selection_max_renown_2", -10000),
    (assign, "$g_presentation_marshall_selection_max_renown_3", -10000),
    (assign, "$g_presentation_marshall_selection_max_renown_1_troop", -10000),
    (assign, "$g_presentation_marshall_selection_max_renown_2_troop", -10000),
    (assign, "$g_presentation_marshall_selection_max_renown_3_troop", -10000),
    (assign, ":var0", 0),
    (try_for_range, ":var1", "trp_kingdom_heroes_including_player_begin", "trp_knight_1_1_wife"),
      (assign, ":var2", ":var1"),
      (assign, ":var3", 0),
      (try_begin),
        (eq, ":var1", "trp_kingdom_heroes_including_player_begin"),
        (assign, ":var2", "trp_player"),
        (try_begin),
          (eq, "$g_player_is_captive", 0),
          (assign, ":var3", 1),
        (try_end),
      (else_try),
        (store_troop_faction, ":var4", ":var2"),
        (eq, "$players_kingdom", ":var4"),
        (neg|troop_slot_ge, ":var2", 8, 0),
        (troop_slot_ge, ":var2", 10, 1),
        (troop_slot_eq, ":var2", 2, 2),
        (neg|faction_slot_eq, ":var4", 10, ":var2"),
        (troop_get_slot, ":var5", ":var2", 10),
        (gt, ":var5", 0),
        (party_is_active, ":var5"),
        (call_script, "script_party_count_fit_for_battle", ":var5"),
        (assign, ":var6", reg0),
        (call_script, "script_party_get_ideal_size", ":var5"),
        (assign, ":var7", reg0),
        (store_mul, ":var8", ":var6", 100),
        (val_div, ":var8", ":var7"),
        (ge, ":var8", 25),
        (assign, ":var3", 1),
      (try_end),
      (eq, ":var3", 1),
      (val_add, ":var0", 1),
      (troop_get_slot, ":var9", ":var2", 7),
      (try_begin),
        (gt, ":var9", "$g_presentation_marshall_selection_max_renown_1"),
        (assign, "$g_presentation_marshall_selection_max_renown_3", "$g_presentation_marshall_selection_max_renown_2"),
        (assign, "$g_presentation_marshall_selection_max_renown_2", "$g_presentation_marshall_selection_max_renown_1"),
        (assign, "$g_presentation_marshall_selection_max_renown_1", ":var9"),
        (assign, "$g_presentation_marshall_selection_max_renown_3_troop", "$g_presentation_marshall_selection_max_renown_2_troop"),
        (assign, "$g_presentation_marshall_selection_max_renown_2_troop", "$g_presentation_marshall_selection_max_renown_1_troop"),
        (assign, "$g_presentation_marshall_selection_max_renown_1_troop", ":var2"),
      (else_try),
        (gt, ":var9", "$g_presentation_marshall_selection_max_renown_2"),
        (assign, "$g_presentation_marshall_selection_max_renown_3", "$g_presentation_marshall_selection_max_renown_2"),
        (assign, "$g_presentation_marshall_selection_max_renown_2", ":var9"),
        (assign, "$g_presentation_marshall_selection_max_renown_3_troop", "$g_presentation_marshall_selection_max_renown_2_troop"),
        (assign, "$g_presentation_marshall_selection_max_renown_2_troop", ":var2"),
      (else_try),
        (gt, ":var9", "$g_presentation_marshall_selection_max_renown_3"),
        (assign, "$g_presentation_marshall_selection_max_renown_3", ":var9"),
        (assign, "$g_presentation_marshall_selection_max_renown_3_troop", ":var2"),
      (try_end),
    (try_end),
    (ge, "$g_presentation_marshall_selection_max_renown_1_troop", 0),
    (ge, "$g_presentation_marshall_selection_max_renown_2_troop", 0),
    (ge, "$g_presentation_marshall_selection_max_renown_3_troop", 0),
    (gt, ":var0", 2),
    (assign, "$g_election_date", 0),
    (assign, "$g_presentation_marshall_selection_ended", 0),
    (try_begin),
      (neq, "$g_presentation_marshall_selection_max_renown_1_troop", "trp_player"),
      (neq, "$g_presentation_marshall_selection_max_renown_2_troop", "trp_player"),
      (start_presentation, "prsnt_marshall_selection"),
    (else_try),
      (jump_to_menu, "mnu_marshall_selection_candidate_ask"),
    (try_end),
  ]),

  (10,
  [
    (try_for_range, ":var0", "trp_kingdom_1_lord", "trp_knight_1_1_wife"),
      (assign, ":var1", 1),
      (troop_get_slot, ":var2", ":var0", 10),
      (try_begin),
        (gt, ":var2", 0),
        (party_get_slot, ":var3", ":var2", 30),
        (ge, ":var3", 0),
        (store_faction_of_party, ":var4", ":var2"),
        (faction_get_slot, ":var5", ":var4", 7),
        (ge, ":var5", 0),
        (troop_get_slot, ":var6", ":var5", 10),
        (eq, ":var3", ":var6"),
        (assign, ":var1", -1),
      (try_end),
      (troop_get_slot, ":var7", ":var0", 57),
      (val_add, ":var7", ":var1"),
      (val_clamp, ":var7", 0, 100),
      (troop_set_slot, ":var0", 57, ":var7"),
      (assign, ":var1", 1),
      (try_begin),
        (gt, ":var2", 0),
        (store_troop_faction, ":var8", ":var0"),
        (eq, ":var8", "fac_player_supporters_faction"),
        (neg|troop_slot_eq, ":var0", 16, -1),
        (party_get_slot, ":var9", ":var2", 4),
        (party_get_slot, ":var10", ":var2", 5),
        (try_begin),
          (troop_slot_eq, ":var0", 16, ":var9"),
          (troop_slot_eq, ":var0", 17, ":var10"),
          (assign, ":var1", -1),
        (else_try),
          (troop_set_slot, ":var0", 16, -1),
          (troop_set_slot, ":var0", 17, -1),
        (try_end),
      (try_end),
      (troop_get_slot, ":var7", ":var0", 58),
      (val_add, ":var7", ":var1"),
      (val_clamp, ":var7", 0, 100),
      (troop_set_slot, ":var0", 58, ":var7"),
      (try_begin),
        (lt, ":var7", 10),
        (troop_set_slot, ":var0", 16, -1),
        (troop_set_slot, ":var0", 17, -1),
      (try_end),
    (try_end),
  ]),

  (2,
  [
    (call_script, "script_process_kingdom_parties_ai"),
  ]),

  (3,
  [
    (call_script, "script_process_alarms"),
  ]),

  (3,
  [
    (store_current_hours, ":var0"),
    (try_for_range, ":var1", "p_town_1", "p_village_1"),
      (party_get_slot, ":var2", ":var1", 54),
      (gt, ":var2", 0),
      (party_is_active, ":var2"),
      (store_faction_of_party, ":var3", ":var2"),
      (party_slot_ge, ":var1", 54, 1),
      (party_get_slot, ":var4", ":var1", 64),
      (store_sub, ":var4", ":var0", ":var4"),
      (assign, ":var5", 0),
      (assign, ":var6", 0),
      (assign, ":var7", 0),
      (assign, ":var8", 0),
      (try_for_range, ":var9", "trp_kingdom_1_lord", "trp_knight_1_1_wife"),
        (troop_slot_eq, ":var9", 2, 2),
        (neg|troop_slot_ge, ":var9", 8, 0),
        (troop_get_slot, ":var10", ":var9", 10),
        (gt, ":var10", 0),
        (store_troop_faction, ":var11", ":var9"),
        (eq, ":var11", ":var3"),
        (assign, ":var12", 0),
        (try_begin),
          (party_slot_eq, ":var10", 4, 1),
          (party_slot_eq, ":var10", 5, ":var1"),
          (assign, ":var12", 1),
        (else_try),
          (party_get_slot, ":var13", ":var10", 30),
          (gt, ":var13", 0),
          (party_is_active, ":var13"),
          (party_slot_eq, ":var13", 4, 1),
          (party_slot_eq, ":var13", 5, ":var1"),
          (assign, ":var12", 1),
        (try_end),
        (eq, ":var12", 1),
        (party_get_battle_opponent, ":var14", ":var10"),
        (this_or_next|lt, ":var14", 0),
        (eq, ":var14", ":var1"),
        (try_begin),
          (faction_slot_eq, ":var3", 7, ":var9"),
          (assign, ":var8", 1),
        (try_end),
        (call_script, "script_party_calculate_regular_strength", ":var10"),
        (val_add, ":var7", reg0),
      (try_end),
      (try_begin),
        (gt, ":var7", 0),
        (party_collect_attachments_to_party, ":var1", "p_collective_enemy"),
        (call_script, "script_party_calculate_regular_strength", "p_collective_enemy"),
        (assign, ":var15", reg0),
        (try_begin),
          (eq, "$auto_enter_town", ":var1"),
          (eq, "$g_player_is_captive", 0),
          (call_script, "script_party_calculate_regular_strength", "p_main_party"),
          (val_add, ":var15", reg0),
          (val_mul, ":var7", 2),
        (try_end),
        (party_get_slot, ":var16", ":var1", 65),
        (val_add, ":var16", 100),
        (val_mul, ":var15", ":var16"),
        (val_div, ":var15", 100),
        (val_max, ":var15", 1),
        (try_begin),
          (eq, ":var8", 1),
          (eq, ":var3", "$players_kingdom"),
          (check_quest_active, "qst_follow_army"),
          (val_mul, ":var7", 2),
        (try_end),
        (store_mul, ":var17", ":var7", 100),
        (val_div, ":var17", ":var15"),
        (store_sub, ":var18", ":var17", 300),
        (try_begin),
          (gt, ":var18", -100),
          (store_div, ":var19", ":var4", 3),
          (val_add, ":var18", ":var19"),
        (try_end),
        (val_div, ":var18", 5),
        (val_max, ":var18", 0),
        (store_sub, ":var20", 200, ":var17"),
        (val_max, ":var20", 0),
        (try_begin),
          (store_random_in_range, ":var21", 0, 100),
          (lt, ":var21", ":var18"),
          (gt, ":var4", 24),
          (assign, ":var5", 1),
        (else_try),
          (store_random_in_range, ":var21", 0, 100),
          (lt, ":var21", ":var20"),
          (assign, ":var6", 1),
        (try_end),
      (else_try),
        (assign, ":var6", 1),
      (try_end),
      (try_begin),
        (eq, ":var5", 1),
        (try_for_range, ":var9", "trp_kingdom_1_lord", "trp_knight_1_1_wife"),
          (troop_slot_eq, ":var9", 2, 2),
          (neg|troop_slot_ge, ":var9", 8, 0),
          (troop_get_slot, ":var10", ":var9", 10),
          (gt, ":var10", 0),
          (assign, ":var12", 0),
          (try_begin),
            (party_slot_eq, ":var10", 4, 1),
            (party_slot_eq, ":var10", 5, ":var1"),
            (party_slot_eq, ":var10", 8, 0),
            (assign, ":var12", 1),
          (else_try),
            (party_get_slot, ":var13", ":var10", 30),
            (gt, ":var13", 0),
            (party_is_active, ":var13"),
            (party_slot_eq, ":var13", 4, 1),
            (party_slot_eq, ":var13", 5, ":var1"),
            (call_script, "script_party_set_ai_state", ":var10", 1, ":var1"),
            (assign, ":var12", 1),
          (try_end),
          (eq, ":var12", 1),
          (party_set_ai_behavior, ":var10", ai_bhvr_attack_party),
          (party_set_ai_object, ":var10", ":var1"),
          (party_set_flags, ":var10", 65536, 1),
          (party_set_slot, ":var10", 8, 1),
        (try_end),
      (else_try),
        (eq, ":var6", 1),
        (try_for_range, ":var9", "trp_kingdom_1_lord", "trp_knight_1_1_wife"),
          (troop_slot_eq, ":var9", 2, 2),
          (neg|troop_slot_ge, ":var9", 8, 0),
          (troop_get_slot, ":var10", ":var9", 10),
          (gt, ":var10", 0),
          (party_slot_eq, ":var10", 4, 1),
          (party_slot_eq, ":var10", 5, ":var1"),
          (party_slot_eq, ":var10", 8, 1),
          (call_script, "script_party_set_ai_state", ":var10", -1, -1),
          (call_script, "script_party_set_ai_state", ":var10", 1, ":var1"),
          (party_set_slot, ":var1", 64, ":var0"),
        (try_end),
      (try_end),
    (try_end),
  ]),

  (36,
  [
    (assign, "$g_recalculate_ais", 1),
  ]),

  (0,
  [
    (eq, "$g_recalculate_ais", 1),
    (assign, "$g_recalculate_ais", 0),
    (call_script, "script_recalculate_ais"),
  ]),

  (24,
  [
    (try_for_range, ":var0", "fac_player_supporters_faction", "fac_kingdoms_end"),
      (call_script, "script_faction_recalculate_strength", ":var0"),
    (try_end),
  ]),

  (36,
  [
    (try_for_range, ":var0", "trp_kingdom_1_lord", "trp_heroes_end"),
      (troop_set_slot, ":var0", 20, 0),
    (try_end),
    (try_for_range, ":var0", "trp_village_1_elder", "trp_merchants_end"),
      (troop_set_slot, ":var0", 20, 0),
    (try_end),
  ]),

  (24,
  [
    (try_for_range, ":var0", "p_village_1", "p_salt_mine"),
      (call_script, "script_refresh_village_merchant_inventory", ":var0"),
    (try_end),
  ]),

  (48,
  [
    (try_for_range, ":var0", "p_village_1", "p_salt_mine"),
      (call_script, "script_refresh_village_defenders", ":var0"),
      (party_set_slot, ":var0", 46, 0),
    (try_end),
  ]),

  (24,
  [
    (try_for_range, ":var0", "p_village_1", "p_salt_mine"),
      (party_get_slot, ":var1", ":var0", 45),
      (store_random_in_range, ":var2", 0, 100),
      (try_begin),
        (lt, ":var2", 3),
        (assign, ":var1", 0),
        (try_begin),
        (try_end),
      (else_try),
        (lt, ":var2", 10),
        (store_random_in_range, ":var2", 111, 121),
        (val_mul, ":var1", ":var2"),
        (val_div, ":var1", 100),
        (store_random_in_range, ":var2", 1, 3),
        (val_add, ":var1", ":var2"),
      (else_try),
        (lt, ":var2", 50),
        (store_random_in_range, ":var2", 3, 8),
        (val_sub, ":var1", ":var2"),
      (else_try),
        (store_random_in_range, ":var2", 101, 111),
        (val_mul, ":var1", ":var2"),
        (val_div, ":var1", 100),
        (store_random_in_range, ":var2", 1, 3),
        (val_add, ":var1", ":var2"),
      (try_end),
      (val_clamp, ":var1", 0, 101),
      (party_set_slot, ":var0", 45, ":var1"),
      (store_sub, ":var3", ":var1", 10),
      (val_div, ":var3", 2),
      (call_script, "script_center_change_trade_good_production", ":var0", "itm_cattle_meat", ":var3", 0),
    (try_end),
  ]),

  (168,
  [
    (try_for_range, ":var0", "p_town_1", "p_salt_mine"),
      (party_get_slot, ":var1", ":var0", 47),
      (assign, ":var2", 0),
      (try_begin),
        (party_slot_eq, ":var0", 0, 4),
        (try_begin),
          (party_slot_eq, ":var0", 35, 0),
          (assign, ":var2", 500),
          (try_begin),
            (party_slot_eq, ":var0", 131, 1),
            (store_random_in_range, ":var3", -4, 15),
            (store_mul, ":var4", ":var3", 25),
            (assign, reg24, ":var4"),
            (display_log_message, "@ DEBUG Hotel income {reg24} cents."),
            (val_add, ":var2", ":var4"),
          (try_end),
          (try_begin),
            (party_slot_eq, ":var0", 132, 1),
            (store_random_in_range, ":var5", -4, 15),
            (store_mul, ":var6", ":var5", 25),
            (assign, reg25, ":var6"),
            (display_log_message, "@ DEBUG Stable income {reg25} cents."),
            (val_add, ":var2", ":var6"),
          (try_end),
          (try_begin),
            (party_slot_eq, ":var0", 133, 1),
            (val_add, ":var2", 200),
            (store_random_in_range, ":var7", 0, 17),
            (store_mul, ":var8", ":var7", 25),
            (assign, reg26, ":var8"),
            (display_log_message, "@ DEBUG Way Station income 200 cents plus {reg26} cents."),
            (val_add, ":var2", ":var8"),
          (try_end),
          (try_begin),
            (party_slot_eq, ":var0", 134, 1),
            (store_random_in_range, ":var9", 0, 15),
            (store_mul, ":var10", ":var9", 25),
            (assign, reg27, ":var10"),
            (display_log_message, "@ DEBUG Saloon income {reg27} cents."),
            (val_add, ":var2", ":var10"),
          (try_end),
          (try_begin),
            (party_slot_eq, ":var0", 135, 1),
            (store_random_in_range, ":var11", -10, 21),
            (store_mul, ":var12", ":var11", 25),
            (assign, reg28, ":var12"),
            (display_log_message, "@ DEBUG Gambling income {reg28} cents."),
            (val_add, ":var2", ":var12"),
          (try_end),
          (try_begin),
            (party_slot_eq, ":var0", 136, 1),
            (val_add, ":var2", 250),
            (store_random_in_range, ":var13", 0, 25),
            (store_mul, ":var14", ":var13", 25),
            (assign, reg29, ":var14"),
            (display_log_message, "@ DEBUG Bordello income 250 cents plus {reg29} cents."),
            (val_add, ":var2", ":var14"),
          (try_end),
        (try_end),
      (else_try),
        (party_slot_eq, ":var0", 0, 2),
        (assign, ":var2", 250),
      (else_try),
        (party_slot_eq, ":var0", 0, 3),
        (assign, ":var2", 1000),
      (try_end),
      (party_get_slot, ":var15", ":var0", 50),
      (store_add, ":var16", 10, ":var15"),
      (val_mul, ":var2", ":var16"),
      (val_div, ":var2", 110),
      (val_add, ":var1", ":var2"),
      (party_set_slot, ":var0", 47, ":var1"),
    (try_end),
    (try_for_range, ":var0", "p_town_1", "p_salt_mine"),
      (party_get_slot, ":var17", ":var0", 7),
      (neq, ":var17", "trp_player"),
      (is_between, ":var17", "trp_kingdom_1_lord", "trp_knight_1_1_wife"),
      (party_get_slot, ":var1", ":var0", 47),
      (party_get_slot, ":var18", ":var0", 48),
      (troop_get_slot, ":var19", ":var17", 11),
      (val_add, ":var19", ":var1"),
      (val_add, ":var19", ":var18"),
      (troop_set_slot, ":var17", 11, ":var19"),
      (party_set_slot, ":var0", 47, 0),
      (party_set_slot, ":var0", 48, 0),
      (try_begin),
        (eq, "$cheat_mode", 1),
        (assign, reg1, ":var19"),
        (add_troop_note_from_sreg, ":var17", 1, "@Current wealth: {reg1}", 0),
      (try_end),
    (try_end),
  ]),

  (32,
  [
    (eq, "$players_kingdom", 0),
    (le, "$g_invite_faction", 0),
    (eq, "$g_player_is_captive", 0),
    (store_random_in_range, ":var0", "fac_player_supporters_faction", "fac_kingdoms_end"),
    (assign, ":var1", 999999),
    (try_for_range, ":var2", "p_town_1", "p_village_1"),
      (store_faction_of_party, ":var3", ":var2"),
      (eq, ":var3", ":var0"),
      (store_distance_to_party_from_party, ":var4", "p_main_party", ":var2"),
      (val_min, ":var1", ":var4"),
    (try_end),
    (lt, ":var1", 30),
    (store_relation, ":var5", ":var0", "fac_player_supporters_faction"),
    (faction_get_slot, ":var6", ":var0", 10),
    (call_script, "script_troop_get_player_relation", ":var6"),
    (assign, ":var7", reg0),
    (call_script, "script_get_number_of_hero_centers", "trp_player"),
    (assign, ":var8", reg0),
    (try_begin),
      (eq, ":var8", 0),
      (troop_get_slot, ":var9", "trp_player", 7),
      (ge, ":var9", 160),
      (ge, ":var5", 0),
      (ge, ":var7", 0),
      (store_random_in_range, ":var10", 0, 100),
      (lt, ":var10", 50),
      (call_script, "script_get_poorest_village_of_faction", ":var0"),
      (assign, "$g_invite_offered_center", reg0),
      (ge, "$g_invite_offered_center", 0),
      (assign, "$g_invite_faction", ":var0"),
      (jump_to_menu, "mnu_invite_player_to_faction"),
    (else_try),
      (gt, ":var8", 0),
      (neq, "$players_oath_renounced_against_kingdom", ":var0"),
      (ge, ":var5", -80),
      (ge, ":var7", -30),
      (store_random_in_range, ":var10", 0, 100),
      (lt, ":var10", 20),
      (assign, "$g_invite_faction", ":var0"),
      (assign, "$g_invite_offered_center", -1),
      (jump_to_menu, "mnu_invite_player_to_faction_without_center"),
    (try_end),
  ]),

  (168,
  [
    (call_script, "script_randomly_start_war_peace", 1),
  ]),

  (5,
  [
    (gt, "$supported_pretender", 0),
    (try_for_range, ":var0", "trp_kingdom_1_lord", "trp_knight_1_1_wife"),
      (store_troop_faction, ":var1", ":var0"),
      (eq, ":var1", "fac_player_supporters_faction"),
      (neg|troop_slot_ge, ":var0", 55, 1),
      (call_script, "script_troop_get_player_relation", ":var0"),
      (assign, ":var2", reg0),
      (lt, ":var2", -5),
      (neq, "$supported_pretender", ":var0"),
      (val_mul, ":var2", -1),
      (val_sub, ":var2", 5),
      (store_random_in_range, ":var3", 0, 2000),
      (lt, ":var3", ":var2"),
      (call_script, "script_cf_get_random_active_faction_except_player_faction_and_faction", -1),
      (troop_set_slot, ":var0", 55, reg0),
    (try_end),
  ]),

  (0.1,
  [
    (try_for_range, ":var0", "trp_kingdom_1_lord", "trp_heroes_end"),
      (troop_slot_eq, ":var0", 2, 2),
      (troop_get_slot, ":var1", ":var0", 10),
      (ge, ":var1", 1),
      (party_get_attached_to, ":var2", ":var1"),
      (lt, ":var2", 1),
      (party_get_cur_town, ":var3", ":var1"),
      (is_between, ":var3", "p_town_1", "p_salt_mine"),
      (call_script, "script_get_relation_between_parties", ":var3", ":var1"),
      (try_begin),
        (ge, reg0, 0),
        (party_attach_to_party, ":var1", ":var3"),
      (else_try),
        (party_set_ai_behavior, ":var1", ai_bhvr_hold),
      (try_end),
      (try_begin),
        (this_or_next|party_slot_eq, ":var3", 0, 3),
        (party_slot_eq, ":var3", 0, 2),
        (store_faction_of_party, ":var4", ":var1"),
        (store_faction_of_party, ":var5", ":var3"),
        (eq, ":var4", ":var5"),
        (party_get_num_prisoner_stacks, ":var6", ":var1"),
        (gt, ":var6", 0),
        (assign, "$g_move_heroes", 1),
        (call_script, "script_party_prisoners_add_party_prisoners", ":var3", ":var1"),
        (assign, "$g_move_heroes", 1),
        (call_script, "script_party_remove_all_prisoners", ":var1"),
      (try_end),
    (try_end),
  ]),

  (48,
  [
    (call_script, "script_randomly_make_prisoner_heroes_escape_from_party", "p_main_party", 50),
    (try_for_range, ":var0", "p_town_1", "p_village_1"),
      (assign, ":var1", 30),
      (try_begin),
        (party_slot_eq, ":var0", 143, 1),
        (assign, ":var1", 5),
      (try_end),
      (call_script, "script_randomly_make_prisoner_heroes_escape_from_party", ":var0", ":var1"),
    (try_end),
  ]),

  (3,
  [
    (assign, "$g_center_taken_by_player_faction", -1),
    (try_for_range, ":var0", "p_town_1", "p_salt_mine"),
      (eq, "$g_center_taken_by_player_faction", -1),
      (store_faction_of_party, ":var1", ":var0"),
      (eq, ":var1", "fac_player_supporters_faction"),
      (this_or_next|party_slot_eq, ":var0", 7, -2),
      (this_or_next|party_slot_eq, ":var0", 7, -1),
      (party_slot_eq, ":var0", 7, -3),
      (assign, "$g_center_taken_by_player_faction", ":var0"),
    (try_end),
    (ge, "$g_center_taken_by_player_faction", 0),
    (faction_get_slot, ":var2", "fac_player_supporters_faction", 10),
    (start_map_conversation, ":var2"),
  ]),

  (48,
  [
    (try_for_range, ":var0", "trp_kingdom_1_lord", "trp_knight_1_1_wife"),
      (troop_slot_eq, ":var0", 2, 2),
      (neg|troop_slot_ge, ":var0", 8, 0),
      (neg|troop_slot_ge, ":var0", 10, 1),
      (store_troop_faction, ":var1", ":var0"),
      (try_begin),
        (call_script, "script_cf_select_random_walled_center_with_faction_and_owner_priority_no_siege", ":var1", ":var0"),
        (assign, ":var2", reg0),
        (call_script, "script_create_kingdom_hero_party", ":var0", ":var2"),
        (party_attach_to_party, "$pout_party", ":var2"),
      (else_try),
        (faction_slot_eq, ":var1", 200, 1),
        (call_script, "script_cf_select_random_town_at_peace_with_faction", ":var1"),
        (assign, ":var2", reg0),
        (call_script, "script_create_kingdom_hero_party", ":var0", ":var2"),
        (party_attach_to_party, "$pout_party", ":var2"),
      (else_try),
        (neg|faction_slot_eq, ":var1", 21, 0),
        (try_begin),
          (is_between, ":var0", "trp_kingdom_1_lord", "trp_knight_1_1"),
          (troop_set_slot, ":var0", 55, "fac_commoners"),
        (else_try),
          (store_random_in_range, ":var3", 0, 100),
          (lt, ":var3", 10),
          (call_script, "script_cf_get_random_active_faction_except_player_faction_and_faction", ":var1"),
          (troop_set_slot, ":var0", 55, reg0),
        (try_end),
      (try_end),
    (try_end),
  ]),

  (24,
  [
    (try_for_range, ":var0", "p_village_1", "p_salt_mine"),
      (party_slot_eq, ":var0", 35, 0),
      (party_get_slot, ":var1", ":var0", 122),
      (this_or_next|eq, ":var1", 0),
      (neg|party_is_active, ":var1"),
      (store_random_in_range, ":var2", 0, 100),
      (lt, ":var2", 30),
      (call_script, "script_create_village_farmer_party", ":var0"),
      (party_set_slot, ":var0", 122, reg0),
    (try_end),
  ]),

  (72,
  [
    (call_script, "script_update_trade_good_prices"),
    (try_for_range, ":var0", "p_town_1", "p_salt_mine"),
      (party_get_slot, ":var1", ":var0", 51),
      (try_begin),
        (gt, ":var1", 1000),
        (val_mul, ":var1", 95),
        (val_div, ":var1", 100),
        (val_max, ":var1", 1000),
      (else_try),
        (lt, ":var1", 1000),
        (val_mul, ":var1", 105),
        (val_div, ":var1", 100),
        (val_min, ":var1", 1000),
      (try_end),
      (party_set_slot, ":var0", 51, ":var1"),
    (try_end),
  ]),

  (8,
  [
    (try_for_parties, ":var0"),
      (party_slot_eq, ":var0", 0, 11),
      (party_is_in_any_town, ":var0"),
      (store_faction_of_party, ":var1", ":var0"),
      (faction_get_slot, ":var2", ":var1", 82),
      (try_begin),
        (le, ":var2", 0),
        (remove_party, ":var0"),
      (else_try),
        (store_random_in_range, ":var3", 0, 100),
        (lt, ":var3", 35),
        (party_get_cur_town, ":var4", ":var0"),
        (assign, ":var5", 1),
        (try_begin),
          (is_between, ":var4", "p_town_1", "p_village_1"),
          (neg|party_slot_eq, ":var4", 54, -1),
          (assign, ":var5", 0),
        (try_end),
        (eq, ":var5", 1),
        (assign, ":var6", 0),
        (try_begin),
          (party_get_slot, ":var7", ":var0", 4),
          (eq, ":var7", 13),
          (party_get_slot, ":var8", ":var0", 5),
          (eq, ":var4", ":var8"),
          (assign, ":var6", 1),
        (try_end),
        (assign, ":var9", -1),
        (try_begin),
          (eq, "$caravan_escort_party_id", ":var0"),
          (neg|party_is_in_town, ":var0", "$caravan_escort_destination_town"),
          (assign, ":var9", "$caravan_escort_destination_town"),
        (else_try),
          (call_script, "script_cf_select_random_town_at_peace_with_faction_in_trade_route", ":var4", ":var1"),
          (assign, ":var9", reg0),
        (try_end),
        (is_between, ":var9", "p_town_1", "p_castle_1"),
        (neg|party_is_in_town, ":var0", ":var9"),
        (try_begin),
          (eq, ":var6", 1),
          (call_script, "script_do_merchant_town_trade", ":var0", ":var4"),
        (try_end),
        (party_set_ai_behavior, ":var0", ai_bhvr_travel_to_party),
        (party_set_ai_object, ":var0", ":var9"),
        (party_set_flags, ":var0", 65536, 0),
        (party_set_slot, ":var0", 4, 13),
        (party_set_slot, ":var0", 5, ":var9"),
      (try_end),
    (try_end),
  ]),

  (8,
  [
    (try_for_parties, ":var0"),
      (party_slot_eq, ":var0", 0, 15),
      (party_is_in_any_town, ":var0"),
      (party_get_slot, ":var1", ":var0", 123),
      (party_get_cur_town, ":var2", ":var0"),
      (assign, ":var3", 1),
      (try_begin),
        (is_between, ":var2", "p_town_1", "p_village_1"),
        (neg|party_slot_eq, ":var2", 54, -1),
        (assign, ":var3", 0),
      (try_end),
      (eq, ":var3", 1),
      (try_begin),
        (eq, ":var2", ":var1"),
        (try_begin),
          (store_random_in_range, ":var4", 0, 100),
          (lt, ":var4", 5),
          (call_script, "script_do_party_center_trade", ":var0", ":var1", 50),
          (assign, ":var5", reg0),
          (party_get_slot, ":var6", ":var1", 50),
          (val_add, ":var6", 30),
          (val_mul, ":var5", ":var6"),
          (val_div, ":var5", 2600),
          (party_get_slot, ":var7", ":var1", 48),
          (val_add, ":var7", ":var5"),
          (party_set_slot, ":var1", 48, ":var7"),
          (party_get_slot, ":var8", ":var1", 121),
          (party_set_slot, ":var0", 5, ":var8"),
          (party_set_slot, ":var0", 4, 13),
          (party_set_ai_behavior, ":var0", ai_bhvr_travel_to_party),
          (party_set_ai_object, ":var0", ":var8"),
        (try_end),
      (else_try),
        (try_begin),
          (party_get_slot, ":var9", ":var0", 5),
          (eq, ":var2", ":var9"),
          (call_script, "script_do_party_center_trade", ":var0", ":var9", 10),
          (assign, ":var5", reg0),
          (party_get_slot, ":var6", ":var9", 50),
          (val_add, ":var6", 30),
          (val_mul, ":var5", ":var6"),
          (val_div, ":var5", 2600),
          (party_get_slot, ":var7", ":var9", 48),
          (val_add, ":var7", ":var5"),
          (party_set_slot, ":var9", 48, ":var7"),
          (party_get_slot, ":var7", ":var1", 48),
          (val_add, ":var7", ":var5"),
          (party_set_slot, ":var1", 48, ":var7"),
          (party_get_slot, ":var10", ":var9", 53),
          (call_script, "script_center_get_food_store_limit", ":var9"),
          (assign, ":var11", reg0),
          (val_add, ":var10", 1000),
          (val_min, ":var10", ":var11"),
          (party_set_slot, ":var9", 53, ":var10"),
          (try_begin),
            (store_random_in_range, ":var12", 0, 100),
            (lt, ":var12", 35),
            (call_script, "script_change_center_prosperity", ":var1", 1),
          (try_end),
        (try_end),
        (party_set_slot, ":var0", 5, ":var1"),
        (party_set_slot, ":var0", 4, 13),
        (party_set_ai_behavior, ":var0", ai_bhvr_travel_to_party),
        (party_set_ai_object, ":var0", ":var1"),
      (try_end),
    (try_end),
  ]),

  (2,
  [
    (try_for_range, ":var0", "p_castle_1", "p_village_1"),
      (party_slot_eq, ":var0", 54, -1),
      (party_get_slot, ":var1", ":var0", 53),
      (val_add, ":var1", 100),
      (call_script, "script_center_get_food_store_limit", ":var0"),
      (assign, ":var2", reg0),
      (val_min, ":var1", ":var2"),
      (party_set_slot, ":var0", 53, ":var1"),
    (try_end),
  ]),

  (0.5,
  [
    (try_for_range, ":var0", "trp_kingdom_1_lord", "trp_heroes_end"),
      (troop_slot_eq, ":var0", 2, 2),
      (troop_get_slot, ":var1", ":var0", 10),
      (gt, ":var1", 0),
      (try_begin),
        (party_is_active, ":var1"),
        (try_begin),
          (get_party_ai_current_behavior, ":var2", ":var1"),
          (eq, ":var2", 5),
          (store_faction_of_party, ":var3", ":var1"),
          (party_get_slot, ":var4", ":var1", 30),
          (faction_get_slot, ":var5", ":var3", 7),
          (neq, ":var5", ":var0"),
          (assign, ":var6", 1),
          (try_begin),
            (ge, ":var5", 0),
            (troop_get_slot, ":var7", ":var5", 10),
            (ge, ":var7", 0),
            (eq, ":var4", ":var7"),
            (assign, ":var6", 0),
          (try_end),
          (eq, ":var6", 1),
          (assign, ":var8", 0),
          (try_for_range, ":var9", "p_town_1", "p_village_1"),
            (eq, ":var8", 0),
            (party_slot_eq, ":var9", 54, -1),
            (store_faction_of_party, ":var10", ":var9"),
            (store_relation, ":var11", ":var10", ":var3"),
            (gt, ":var11", 0),
            (store_distance_to_party_from_party, ":var12", ":var1", ":var9"),
            (lt, ":var12", 20),
            (party_get_position, pos1, ":var1"),
            (party_get_position, pos2, ":var9"),
            (neg|position_is_behind_position, pos2, pos1),
            (call_script, "script_party_set_ai_state", ":var1", 14, ":var9"),
            (assign, ":var8", 1),
          (try_end),
        (try_end),
      (else_try),
        (troop_set_slot, ":var0", 10, -1),
      (try_end),
    (try_end),
  ]),

  (0.5,
  [
    (store_current_hours, ":var0"),
    (store_mod, ":var1", ":var0", 11),
    (store_sub, ":var2", ":var0", 5),
    (party_get_num_companions, ":var3", "p_main_party"),
    (party_get_num_prisoners, ":var4", "p_main_party"),
    (val_add, ":var3", ":var4"),
    (convert_to_fixed_point, ":var3"),
    (store_sqrt, ":var5", ":var3"),
    (convert_from_fixed_point, ":var5"),
    (try_begin),
      (eq, ":var1", 0),
      (try_for_range, ":var6", "fac_player_supporters_faction", "fac_kingdoms_end"),
        (faction_get_slot, ":var7", ":var6", 30),
        (val_sub, ":var7", 1),
        (val_max, ":var7", 0),
        (faction_set_slot, ":var6", 30, ":var7"),
      (try_end),
    (try_end),
    (eq, "$g_player_is_captive", 0),
    (try_for_range, ":var8", "p_town_1", "p_salt_mine"),
      (store_faction_of_party, ":var6", ":var8"),
      (store_relation, ":var9", ":var6", "fac_player_supporters_faction"),
      (lt, ":var9", 0),
      (store_distance_to_party_from_party, ":var10", "p_main_party", ":var8"),
      (lt, ":var10", 5),
      (store_mul, ":var11", ":var10", ":var10"),
      (store_sub, ":var12", 20, ":var11"),
      (store_sub, ":var13", 20, ":var9"),
      (store_mul, ":var14", ":var12", ":var13"),
      (val_mul, ":var14", ":var5"),
      (store_div, ":var15", ":var14", 10),
      (store_random_in_range, ":var16", 0, 1000),
      (lt, ":var16", ":var15"),
      (faction_get_slot, ":var7", ":var6", 30),
      (val_add, ":var7", 1),
      (val_min, ":var7", 100),
      (faction_set_slot, ":var6", 30, ":var7"),
      (try_begin),
        (neg|party_slot_ge, ":var8", 42, ":var2"),
        (str_store_party_name_link, s1, ":var8"),
        (display_message, "@Your party is spotted by {s1}."),
        (party_set_slot, ":var8", 42, ":var0"),
      (try_end),
    (try_end),
  ]),

  (14,
  [
    (eq, "$g_player_is_captive", 0),
    (party_get_num_companion_stacks, ":var0", "p_main_party"),
    (assign, ":var1", 0),
    (try_for_range, ":var2", 0, ":var0"),
      (party_stack_get_size, ":var3", "p_main_party", ":var2"),
      (val_add, ":var1", ":var3"),
    (try_end),
    (val_div, ":var1", 3),
    (try_begin),
      (eq, ":var1", 0),
      (val_add, ":var1", 1),
    (try_end),
    (assign, ":var4", ":var1"),
    (assign, ":var5", 0),
    (try_for_range, ":var6", 0, ":var4"),
      (assign, ":var7", 0),
      (try_for_range, ":var8", "itm_smoked_fish", "itm_wine"),
        (item_set_slot, ":var8", 0, 0),
        (call_script, "script_cf_player_has_item_without_modifier", ":var8", 41),
        (val_add, ":var7", 1),
      (try_end),
      (try_begin),
        (gt, ":var7", 0),
        (store_random_in_range, ":var9", 0, ":var7"),
        (call_script, "script_consume_food", ":var9"),
      (else_try),
        (eq, ":var5", 0),
        (display_message, "@Party has nothing to eat!", 0xFF0000),
        (call_script, "script_change_player_party_morale", -3),
        (assign, ":var5", 1),
        (try_begin),
          (call_script, "script_party_count_fit_regulars", "p_main_party"),
          (gt, reg0, 0),
          (call_script, "script_objectionable_action", 2, "str_men_hungry"),
        (try_end),
      (try_end),
    (try_end),
  ]),

  (24,
  [
    (troop_get_inventory_capacity, ":var0", "trp_player"),
    (try_for_range, ":var1", 0, ":var0"),
      (troop_get_inventory_slot, ":var2", "trp_player", ":var1"),
      (this_or_next|eq, ":var2", "itm_deer_meat"),
      (eq, ":var2", "itm_cattle_meat"),
      (troop_get_inventory_slot_modifier, ":var3", "trp_player", ":var1"),
      (try_begin),
        (ge, ":var3", 37),
        (lt, ":var3", 41),
        (val_add, ":var3", 1),
        (troop_set_inventory_slot_modifier, "trp_player", ":var1", ":var3"),
      (else_try),
        (lt, ":var3", 37),
        (troop_set_inventory_slot_modifier, "trp_player", ":var1", 37),
      (try_end),
    (try_end),
  ]),

  (72,
  [
    (call_script, "script_assign_lords_to_empty_centers"),
  ]),

  (0,
  [
    (troop_get_inventory_slot, ":var0", "trp_player", ek_horse),
    (assign, ":var1", -1),
    (try_begin),
      (eq, "$g_player_icon_state", 0),
      (try_begin),
        (ge, ":var0", 0),
        (assign, ":var1", "icon_player_horseman"),
      (else_try),
        (assign, ":var1", "icon_player"),
      (try_end),
    (else_try),
      (eq, "$g_player_icon_state", 1),
      (assign, ":var1", "icon_camp"),
    (else_try),
      (eq, "$g_player_icon_state", 2),
      (assign, ":var1", "icon_ship"),
    (try_end),
    (neq, ":var1", "$g_player_party_icon"),
    (assign, "$g_player_party_icon", ":var1"),
    (party_set_icon, "p_main_party", ":var1"),
  ]),

  (2,
  [
    (store_troop_gold, ":var0", "trp_player"),
    (store_div, ":var1", ":var0", 100),
    (troop_get_inventory_capacity, ":var2", "trp_player"),
    (try_for_range, ":var3", 0, ":var2"),
      (troop_get_inventory_slot, ":var4", "trp_player", ":var3"),
      (ge, ":var4", 0),
      (try_begin),
        (is_between, ":var4", "itm_smoked_fish", "itm_gold_bar"),
        (store_item_value, ":var5", ":var4"),
        (val_add, ":var0", ":var5"),
      (try_end),
    (try_end),
    (val_clamp, ":var1", 0, 100),
    (party_set_bandit_attraction, "p_main_party", ":var1"),
  ]),

  (6,
  [
    (gt, "$g_prisoner_recruit_troop_id", 0),
    (gt, "$g_prisoner_recruit_size", 0),
    (gt, "$g_prisoner_recruit_last_time", 0),
    (is_currently_night),
    (try_begin),
      (store_skill_level, ":var0", "skl_leadership", "trp_player"),
      (val_mul, ":var0", 5),
      (store_sub, ":var1", 66, ":var0"),
      (gt, ":var1", 0),
      (assign, ":var2", 0),
      (try_for_range, ":var3", 0, "$g_prisoner_recruit_size"),
        (store_random_in_range, ":var4", 0, 100),
        (lt, ":var4", ":var1"),
        (val_add, ":var2", 1),
      (try_end),
      (party_remove_members, "p_main_party", "$g_prisoner_recruit_troop_id", ":var2"),
      (assign, ":var2", reg0),
      (gt, ":var2", 0),
      (try_begin),
        (gt, ":var2", 1),
        (assign, reg2, 1),
      (else_try),
        (assign, reg2, 0),
      (try_end),
      (assign, reg1, ":var2"),
      (str_store_troop_name_by_count, s1, "$g_prisoner_recruit_troop_id", ":var2"),
      (display_log_message, "@{reg1} {s1} {reg2?have:has} escaped from your party during the night."),
    (try_end),
    (assign, "$g_prisoner_recruit_troop_id", 0),
    (assign, "$g_prisoner_recruit_size", 0),
  ]),

  (24,
  [
    (neq, "$g_ransom_offer_rejected", 1),
    (call_script, "script_offer_ransom_amount_to_player_for_prisoners_in_party", "p_main_party"),
    (eq, reg0, 0),
    (assign, ":var0", "p_village_1"),
    (try_for_range, ":var1", "p_town_1", ":var0"),
      (party_slot_eq, ":var1", 7, "trp_player"),
      (call_script, "script_offer_ransom_amount_to_player_for_prisoners_in_party", ":var1"),
      (eq, reg0, 1),
      (assign, ":var0", 0),
    (try_end),
  ]),

  (72,
  [
    (assign, "$g_ransom_offer_rejected", 0),
    (try_for_range, ":var0", "p_town_1", "p_village_1"),
      (party_get_slot, ":var1", ":var0", 7),
      (gt, ":var1", 0),
      (party_get_num_prisoner_stacks, ":var2", ":var0"),
      (try_for_range_backwards, ":var3", 0, ":var2"),
        (party_prisoner_stack_get_troop_id, ":var4", ":var0", ":var3"),
        (troop_is_hero, ":var4"),
        (troop_slot_eq, ":var4", 2, 2),
        (store_random_in_range, ":var5", 0, 100),
        (try_begin),
          (le, ":var5", 10),
          (call_script, "script_calculate_ransom_amount_for_troop", ":var4"),
          (assign, ":var6", reg0),
          (troop_get_slot, ":var7", ":var1", 11),
          (val_add, ":var7", ":var6"),
          (troop_set_slot, ":var1", 11, ":var7"),
          (party_remove_prisoners, ":var0", ":var4", 1),
          (call_script, "script_remove_troop_from_prison", ":var4"),
          (store_troop_faction, ":var8", ":var1"),
          (store_troop_faction, ":var9", ":var4"),
          (str_store_troop_name, s1, ":var4"),
          (str_store_faction_name, s2, ":var8"),
          (str_store_faction_name, s3, ":var9"),
          (display_log_message, "@{s1} of {s3} has been released from captivity."),
        (try_end),
      (try_end),
    (try_end),
  ]),

  (36,
  [
    (call_script, "script_update_mercenary_units_of_towns"),
    (call_script, "script_update_companion_candidates_in_taverns"),
    (call_script, "script_update_villages_infested_by_bandits"),
    (call_script, "script_update_animals_infested_by_bandits"),
    (try_for_range, ":var0", "p_village_1", "p_salt_mine"),
      (call_script, "script_update_volunteer_troops_in_village", ":var0"),
      (call_script, "script_update_npc_volunteer_troops_in_village", ":var0"),
    (try_end),
    (try_for_range, ":var1", "p_town_1", "p_castle_1"),
      (call_script, "script_update_volunteer_troops_in_towns", ":var1"),
    (try_end),
    (try_for_range, ":var2", "p_castle_1", "p_village_1"),
      (call_script, "script_update_volunteer_troops_in_castles", ":var2"),
    (try_end),
  ]),

  (36,
  [
    (try_for_range, ":var0", "p_town_1", "p_salt_mine"),
      (this_or_next|party_slot_eq, ":var0", 0, 3),
      (party_slot_eq, ":var0", 0, 4),
      (call_script, "script_center_remove_walker_type_from_walkers", ":var0", 1),
      (call_script, "script_center_remove_walker_type_from_walkers", ":var0", 2),
      (try_for_range, ":var1", 250, 255),
        (store_random_in_range, ":var2", "trp_tavern_visitor_1", "trp_local_merchant"),
        (party_set_slot, ":var0", ":var1", ":var2"),
      (try_end),
      (store_random_in_range, ":var3", 0, 100),
      (try_begin),
        (lt, ":var3", 0),
        (neg|party_slot_ge, ":var0", 50, 60),
        (call_script, "script_cf_center_get_free_walker", ":var0"),
        (call_script, "script_center_set_walker_to_type", ":var0", reg0, 1),
      (try_end),
    (try_end),
  ]),

  (12,
  [
    (try_for_range, ":var0", "p_town_1", "p_salt_mine"),
      (party_get_slot, ":var1", ":var0", 124),
      (gt, ":var1", 0),
      (party_get_slot, ":var2", ":var0", 125),
      (store_current_hours, ":var3"),
      (ge, ":var3", ":var2"),
      (party_set_slot, ":var0", ":var1", 1),
      (party_set_slot, ":var0", 124, 0),
      (call_script, "script_get_improvement_details", ":var1"),
      (try_begin),
        (party_slot_eq, ":var0", 7, "trp_player"),
        (str_store_party_name, s4, ":var0"),
        (display_log_message, "@Building of {s0} in {s4} has been completed."),
      (try_end),
      (try_begin),
        (is_between, ":var0", "p_village_1", "p_salt_mine"),
        (eq, ":var1", 137),
        (call_script, "script_change_center_prosperity", ":var0", 2),
      (try_end),
      (try_begin),
        (is_between, ":var0", "p_village_1", "p_salt_mine"),
        (eq, ":var1", 138),
        (call_script, "script_change_center_prosperity", ":var0", 3),
      (try_end),
      (try_begin),
        (is_between, ":var0", "p_village_1", "p_salt_mine"),
        (eq, ":var1", 139),
        (call_script, "script_change_center_prosperity", ":var0", 4),
      (try_end),
    (try_end),
  ]),

  (24,
  [
    (try_for_range, ":var0", "p_town_1", "p_salt_mine"),
      (this_or_next|party_slot_eq, ":var0", 0, 3),
      (party_slot_eq, ":var0", 0, 4),
      (party_get_slot, ":var1", ":var0", 149),
      (try_begin),
        (le, ":var1", 0),
        (assign, ":var2", 0),
        (try_begin),
          (check_quest_active, "qst_deal_with_night_bandits"),
          (quest_slot_eq, "qst_deal_with_night_bandits", 1, ":var0"),
          (neg|check_quest_succeeded, "qst_deal_with_night_bandits"),
          (assign, ":var2", 1),
        (else_try),
          (store_random_in_range, ":var3", 0, 100),
          (lt, ":var3", 3),
          (assign, ":var2", 1),
        (try_end),
        (try_begin),
          (eq, ":var2", 1),
          (store_random_in_range, ":var3", 0, 3),
          (try_begin),
            (eq, ":var3", 0),
            (assign, ":var4", "trp_forest_bandit"),
          (else_try),
            (eq, ":var3", 1),
            (assign, ":var4", "trp_thief"),
          (else_try),
            (assign, ":var4", "trp_burglar"),
          (try_end),
          (party_set_slot, ":var0", 149, ":var4"),
          (try_begin),
            (eq, "$cheat_mode", 1),
            (str_store_party_name, s1, ":var0"),
            (display_message, "@{s1} is infested by bandits (at night)."),
          (try_end),
        (try_end),
      (else_try),
        (try_begin),
          (assign, ":var5", 40),
          (try_begin),
            (party_slot_eq, ":var0", 0, 3),
            (assign, ":var5", 20),
          (try_end),
          (store_random_in_range, ":var3", 0, 100),
          (lt, ":var3", ":var5"),
          (party_set_slot, ":var0", 149, 0),
          (try_begin),
            (eq, "$cheat_mode", 1),
            (str_store_party_name, s1, ":var0"),
            (display_message, "@{s1} is no longer infested by bandits (at night)."),
          (try_end),
        (try_end),
      (try_end),
    (try_end),
    (try_for_range, ":var0", "p_town_1", "p_salt_mine"),
      (this_or_next|party_slot_eq, ":var0", 0, 3),
      (party_slot_eq, ":var0", 0, 4),
      (party_get_slot, ":var1", ":var0", 149),
      (try_begin),
        (le, ":var1", 0),
        (assign, ":var2", 0),
        (party_get_slot, ":var6", ":var0", 26),
        (store_add, ":var7", ":var6", 100),
        (val_add, ":var7", 5),
        (store_div, ":var8", ":var7", 10),
        (val_clamp, ":var8", 0, 20),
        (is_between, ":var8", 0, 7),
        (store_sub, ":var6", 7, ":var8"),
        (store_random_in_range, ":var3", 0, 100),
        (lt, ":var3", ":var6"),
        (try_begin),
          (try_begin),
            (ge, ":var3", 4),
            (assign, ":var4", "trp_pinkerton_agent"),
          (else_try),
            (ge, ":var3", 2),
            (assign, ":var4", "trp_state_militia"),
          (else_try),
            (assign, ":var4", "trp_county_militia"),
          (try_end),
          (party_set_slot, ":var0", 149, ":var4"),
          (try_begin),
            (eq, "$cheat_mode", 1),
            (str_store_party_name, s1, ":var0"),
            (display_message, "@{s1} is infested by hunters."),
          (try_end),
        (try_end),
      (else_try),
        (try_begin),
          (assign, ":var5", 40),
          (try_begin),
            (party_slot_eq, ":var0", 0, 3),
            (assign, ":var5", 20),
          (try_end),
          (store_random_in_range, ":var3", 0, 100),
          (lt, ":var3", ":var5"),
          (party_set_slot, ":var0", 149, 0),
          (try_begin),
            (eq, "$cheat_mode", 1),
            (str_store_party_name, s1, ":var0"),
            (display_message, "@{s1} is no longer infested by hunters."),
          (try_end),
        (try_end),
      (try_end),
    (try_end),
  ]),

  (8,
  [
    (assign, ":var0", 0),
    (try_for_range, ":var1", "p_town_1", "p_salt_mine"),
      (eq, ":var0", 0),
      (party_slot_eq, ":var1", 7, -2),
      (assign, "$g_center_to_give_to_player", ":var1"),
      (try_begin),
        (eq, "$g_center_to_give_to_player", "$g_castle_requested_by_player"),
        (assign, "$g_castle_requested_by_player", 0),
        (jump_to_menu, "mnu_requested_castle_granted_to_player"),
      (else_try),
        (jump_to_menu, "mnu_give_center_to_player"),
      (try_end),
      (assign, ":var0", 1),
    (else_try),
      (eq, ":var1", "$g_castle_requested_by_player"),
      (party_slot_ge, ":var1", 7, "trp_kingdom_1_lord"),
      (assign, "$g_castle_requested_by_player", 0),
      (store_faction_of_party, ":var2", ":var1"),
      (eq, ":var2", "$players_kingdom"),
      (assign, "$g_center_to_give_to_player", ":var1"),
      (jump_to_menu, "mnu_requested_castle_granted_to_another"),
      (assign, ":var0", 1),
    (try_end),
  ]),

  (1,
  [
    (neg|map_free),
    (is_currently_night),
    (ge, "$g_last_rest_center", 0),
    (neg|party_slot_eq, "$g_last_rest_center", 7, "trp_player"),
    (neq, "$elpaso_house_bought", 1),
    (store_current_hours, ":var0"),
    (ge, ":var0", "$g_last_rest_payment_until"),
    (store_add, "$g_last_rest_payment_until", ":var0", 24),
    (store_troop_gold, ":var1", "trp_player"),
    (party_get_num_companions, ":var2", "p_main_party"),
    (store_div, ":var3", ":var2", 4),
    (val_add, ":var3", 1),
    (val_mul, ":var3", 10),
    (try_begin),
      (ge, ":var1", ":var3"),
      (display_message, "@You pay for accommodation."),
      (troop_remove_gold, "trp_player", ":var3"),
    (else_try),
      (gt, ":var1", 0),
      (troop_remove_gold, "trp_player", ":var1"),
    (try_end),
  ]),

  (36,
  [
    (call_script, "script_spawn_bandits"),
  ]),

  (24,
  [
    (call_script, "script_update_party_creation_random_limits"),
    (try_for_range, ":var0", "p_village_1", "p_salt_mine"),
      (call_script, "script_refresh_village_defenders", ":var0"),
    (try_end),
  ]),

  (24,
  [
    (assign, ":var0", 0),
    (try_for_range, ":var1", "fac_player_supporters_faction", "fac_kingdoms_end"),
      (faction_set_slot, ":var1", 20, 0),
    (try_end),
    (try_for_parties, ":var2"),
      (store_faction_of_party, ":var3", ":var2"),
      (is_between, ":var3", "fac_player_supporters_faction", "fac_kingdoms_end"),
      (this_or_next|is_between, ":var2", "p_town_1", "p_salt_mine"),
      (party_slot_eq, ":var2", 0, 13),
      (faction_get_slot, ":var4", ":var3", 20),
      (val_add, ":var4", 1),
      (faction_set_slot, ":var3", 20, ":var4"),
    (try_end),
    (try_for_range, ":var1", "fac_player_supporters_faction", "fac_kingdoms_end"),
      (faction_slot_eq, ":var1", 200, 0),
      (faction_slot_eq, ":var1", 21, 0),
      (val_add, ":var0", 1),
      (faction_slot_eq, ":var1", 20, 0),
      (assign, ":var5", 0),
      (try_begin),
        (assign, ":var6", 1),
      (else_try),
        (assign, ":var6", 2),
      (try_end),
      (try_begin),
        (eq, ":var1", "fac_player_supporters_faction"),
        (try_begin),
          (le, "$supported_pretender", 0),
          (faction_set_slot, ":var1", 21, 2),
          (assign, ":var5", 1),
        (try_end),
      (else_try),
        (neq, "$players_kingdom", ":var1"),
        (faction_set_slot, ":var1", 21, ":var6"),
        (try_for_parties, ":var2"),
          (store_faction_of_party, ":var3", ":var2"),
          (eq, ":var3", ":var1"),
          (party_get_slot, ":var7", ":var2", 123),
          (store_faction_of_party, ":var8", ":var7"),
          (party_set_faction, ":var2", ":var8"),
        (try_end),
        (assign, ":var9", -1),
        (try_for_range, ":var10", 0, 0),
          (troop_slot_eq, ":var10", 14, ":var1"),
          (assign, ":var9", ":var10"),
        (try_end),
        (try_begin),
          (is_between, ":var9", 0, 0),
          (neq, ":var9", "$supported_pretender"),
          (troop_set_slot, ":var9", 12, 0),
        (try_end),
        (assign, ":var5", 1),
        (try_begin),
          (eq, "$players_oath_renounced_against_kingdom", ":var1"),
          (assign, "$players_oath_renounced_against_kingdom", 0),
          (assign, "$players_oath_renounced_given_center", 0),
          (assign, "$players_oath_renounced_begin_time", 0),
          (call_script, "script_add_notification_menu", "mnu_notification_oath_renounced_faction_defeated", ":var1", 0),
        (try_end),
        (call_script, "script_add_notification_menu", "mnu_notification_faction_defeated", ":var1", 0),
      (try_end),
      (try_begin),
        (eq, ":var5", 1),
        (val_sub, ":var0", 1),
        (call_script, "script_store_average_center_value_per_faction"),
      (try_end),
      (try_for_range, ":var11", "fac_player_supporters_faction", "fac_kingdoms_end"),
        (call_script, "script_update_faction_notes", ":var11"),
      (try_end),
    (try_end),
    (try_begin),
      (eq, ":var0", 1),
      (try_for_range, ":var1", "fac_player_supporters_faction", "fac_kingdoms_end"),
        (faction_slot_eq, ":var1", 21, 0),
        (call_script, "script_add_notification_menu", "mnu_notification_one_faction_left", ":var1", 0),
      (try_end),
    (try_end),
  ]),

  (168,
  [
    (troop_get_slot, ":var0", "trp_player", 7),
    (store_div, ":var1", ":var0", 200),
    (val_sub, ":var0", ":var1"),
    (troop_set_slot, "trp_player", 7, ":var0"),
  ]),

  (1,
  [
    (neg|map_free),
    (gt, "$g_player_reading_book", 0),
    (player_has_item, "$g_player_reading_book"),
    (store_attribute_level, ":var0", "trp_player", ca_intelligence),
    (item_get_slot, ":var1", "$g_player_reading_book", 4),
    (le, ":var1", ":var0"),
    (item_get_slot, ":var2", "$g_player_reading_book", 2),
    (item_get_slot, ":var3", "$g_player_reading_book", 3),
    (eq, ":var3", 0),
    (val_add, ":var2", 7),
    (item_set_slot, "$g_player_reading_book", 2, ":var2"),
    (ge, ":var2", 1000),
    (item_set_slot, "$g_player_reading_book", 3, 1),
    (str_store_item_name, s1, "$g_player_reading_book"),
    (str_clear, s2),
    (try_begin),
      (eq, "$g_player_reading_book", "itm_book_tactics"),
      (troop_raise_skill, "trp_player", "skl_tactics", 1),
      (str_store_string, s2, "@ Your tactics skill has increased by 1."),
    (else_try),
      (eq, "$g_player_reading_book", "itm_book_persuasion"),
      (troop_raise_skill, "trp_player", "skl_persuasion", 1),
      (str_store_string, s2, "@ Your persuasion skill has increased by 1."),
    (else_try),
      (eq, "$g_player_reading_book", "itm_book_leadership"),
      (troop_raise_skill, "trp_player", "skl_leadership", 1),
      (str_store_string, s2, "@ Your leadership skill has increased by 1."),
    (else_try),
      (eq, "$g_player_reading_book", "itm_book_intelligence"),
      (troop_raise_attribute, "trp_player", ca_intelligence, 1),
      (str_store_string, s2, "@ Your intelligence has increased by 1."),
    (else_try),
      (eq, "$g_player_reading_book", "itm_book_trade"),
      (troop_raise_skill, "trp_player", "skl_trade", 1),
      (str_store_string, s2, "@ Your trade skill has increased by 1."),
    (else_try),
      (eq, "$g_player_reading_book", "itm_book_weapon_mastery"),
      (troop_raise_skill, "trp_player", "skl_weapon_master", 1),
      (str_store_string, s2, "@ Your weapon master skill has increased by 1."),
    (else_try),
      (eq, "$g_player_reading_book", "itm_book_engineering"),
      (troop_raise_skill, "trp_player", "skl_engineer", 1),
      (str_store_string, s2, "@ Your engineer skill has increased by 1."),
    (try_end),
    (dialog_box, "@You have finished reading {s1}.{s2}", "@Book Read"),
    (assign, "$g_player_reading_book", 0),
  ]),

  (12,
  [
    (try_for_parties, ":var0"),
      (this_or_next|party_slot_eq, ":var0", 0, 20),
      (party_slot_eq, ":var0", 0, 17),
      (store_distance_to_party_from_party, ":var1", ":var0", "p_main_party"),
      (try_begin),
        (gt, ":var1", 30),
        (remove_party, ":var0"),
        (try_begin),
          (check_quest_active, "qst_move_cattle_herd"),
          (neg|check_quest_concluded, "qst_move_cattle_herd"),
          (quest_slot_eq, "qst_move_cattle_herd", 8, ":var0"),
          (call_script, "script_fail_quest", "qst_move_cattle_herd"),
        (else_try),
          (check_quest_active, "qst_move_horses_herd"),
          (neg|check_quest_concluded, "qst_move_horses_herd"),
          (quest_slot_eq, "qst_move_horses_herd", 8, ":var0"),
          (call_script, "script_fail_quest", "qst_move_horses_herd"),
        (try_end),
      (else_try),
        (gt, ":var1", 10),
        (party_set_slot, ":var0", 7, 0),
        (party_set_slot, ":var0", 7, 0),
        (party_set_ai_behavior, ":var0", ai_bhvr_hold),
      (try_end),
    (try_end),
  ]),

  (720,
  [
    (try_for_range, ":var0", "p_village_1", "p_salt_mine"),
      (party_slot_eq, ":var0", 7, "trp_player"),
      (try_begin),
        (party_slot_eq, ":var0", 141, 1),
        (party_get_slot, ":var1", ":var0", 26),
        (val_add, ":var1", 1),
        (val_min, ":var1", 100),
        (party_set_slot, ":var0", 26, ":var1"),
      (try_end),
      (try_begin),
        (party_slot_eq, ":var0", 138, 1),
        (call_script, "script_change_center_prosperity", ":var0", 1),
      (try_end),
      (try_begin),
        (party_slot_eq, ":var0", 139, 1),
        (call_script, "script_change_center_prosperity", ":var0", 1),
      (try_end),
    (try_end),
  ]),

  (24,
  [
    (try_for_range, ":var0", 0, "qst_quests_end"),
      (try_begin),
        (check_quest_active, ":var0"),
        (try_begin),
          (neg|check_quest_concluded, ":var0"),
          (quest_slot_ge, ":var0", 23, 1),
          (quest_get_slot, ":var1", ":var0", 23),
          (val_sub, ":var1", 1),
          (try_begin),
            (eq, ":var1", 0),
            (call_script, "script_abort_quest", ":var0", 1),
          (else_try),
            (quest_set_slot, ":var0", 23, ":var1"),
            (assign, reg0, ":var1"),
            (add_quest_note_from_sreg, ":var0", 7, "@You have {reg0} days to finish this quest.", 0),
          (try_end),
        (try_end),
      (else_try),
        (quest_slot_ge, ":var0", 25, 1),
        (quest_get_slot, ":var2", ":var0", 25),
        (val_sub, ":var2", 1),
        (quest_set_slot, ":var0", 25, ":var2"),
        (try_begin),
          (eq, ":var2", 0),
          (eq, ":var0", "qst_graveyard_duel"),
          (troop_set_slot, "trp_gy_duel_master", 142, "scn_town_4_center"),
          (troop_set_slot, "trp_gy_duel_master", 143, 8),
        (try_end),
      (try_end),
    (try_end),
  ]),

  (6,
  [
    (is_between, "$players_kingdom", "fac_player_supporters_faction", "fac_kingdoms_end"),
    (eq, "$g_player_is_captive", 0),
    (neg|faction_slot_eq, "$players_kingdom", 4, 0),
    (neg|check_quest_active, "qst_report_to_army"),
    (neg|check_quest_active, "qst_follow_army"),
    (neg|quest_slot_ge, "qst_report_to_army", 25, 1),
    (faction_get_slot, ":var0", "$players_kingdom", 7),
    (gt, ":var0", 0),
    (troop_get_slot, ":var1", ":var0", 10),
    (gt, ":var1", 0),
    (assign, ":var2", 1),
    (try_for_range, ":var3", "qst_deliver_message", "qst_follow_army"),
      (check_quest_active, ":var3"),
      (quest_slot_eq, ":var3", 6, ":var0"),
      (assign, ":var2", 0),
    (try_end),
    (eq, ":var2", 1),
    (try_for_range, ":var3", "qst_deliver_cattle_to_army", "qst_rescue_lord_by_replace"),
      (check_quest_active, ":var3"),
      (assign, ":var2", 0),
    (try_end),
    (eq, ":var2", 1),
    (store_character_level, ":var4", "trp_player"),
    (ge, ":var4", 8),
    (assign, ":var5", 2),
    (try_for_range, ":var6", "p_town_1", "p_salt_mine"),
      (party_slot_eq, ":var6", 7, "trp_player"),
      (try_begin),
        (party_slot_eq, ":var6", 0, 3),
        (val_add, ":var5", 3),
      (else_try),
        (party_slot_eq, ":var6", 0, 2),
        (val_add, ":var5", 1),
      (else_try),
        (val_add, ":var5", 1),
      (try_end),
    (try_end),
    (val_mul, ":var5", 4),
    (val_min, ":var5", 60),
    (quest_set_slot, "qst_report_to_army", 6, ":var0"),
    (quest_set_slot, "qst_report_to_army", 2, ":var0"),
    (quest_set_slot, "qst_report_to_army", 10, ":var5"),
    (quest_set_slot, "qst_report_to_army", 23, 4),
    (quest_set_slot, "qst_report_to_army", 24, 28),
    (jump_to_menu, "mnu_kingdom_army_quest_report_to_army"),
  ]),

  (3,
  [
    (assign, "$g_random_army_quest", -1),
    (check_quest_active, "qst_follow_army", 1),
    (is_between, "$players_kingdom", "fac_player_supporters_faction", "fac_kingdoms_end"),
    (neg|faction_slot_eq, "$players_kingdom", 4, 0),
    (faction_get_slot, ":var0", "$players_kingdom", 7),
    (neq, ":var0", "trp_player"),
    (gt, ":var0", 0),
    (troop_get_slot, ":var1", ":var0", 10),
    (gt, ":var1", 0),
    (store_distance_to_party_from_party, ":var2", ":var1", "p_main_party"),
    (try_begin),
      (lt, ":var2", 15),
      (assign, "$g_player_follow_army_warnings", 0),
      (store_current_hours, ":var3"),
      (faction_get_slot, ":var4", "$players_kingdom", 6),
      (store_sub, ":var5", ":var3", ":var4"),
      (assign, ":var6", -1),
      (try_begin),
        (store_random_in_range, ":var7", 0, 100),
        (lt, ":var7", 30),
        (troop_slot_eq, ":var0", 20, 0),
        (try_for_range, ":var8", 0, 20),
          (eq, ":var6", -1),
          (store_random_in_range, ":var9", "qst_deliver_cattle_to_army", "qst_rescue_lord_by_replace"),
          (neg|quest_slot_ge, ":var9", 25, 1),
          (try_begin),
            (eq, ":var9", "qst_deliver_cattle_to_army"),
            (try_begin),
              (faction_slot_eq, "$players_kingdom", 4, 2),
              (gt, ":var5", 120),
              (store_random_in_range, ":var10", 5, 10),
              (assign, ":var6", ":var9"),
              (quest_set_slot, ":var6", 10, ":var10"),
              (quest_set_slot, ":var6", 23, 10),
              (quest_set_slot, ":var6", 24, 30),
            (try_end),
          (else_try),
            (eq, ":var9", "qst_join_siege_with_army"),
            (try_begin),
              (faction_slot_eq, "$players_kingdom", 4, 2),
              (faction_get_slot, ":var11", "$players_kingdom", 5),
              (is_between, ":var11", "p_town_1", "p_village_1"),
              (party_get_battle_opponent, ":var12", ":var1"),
              (eq, ":var12", ":var11"),
              (assign, ":var6", ":var9"),
              (quest_set_slot, ":var6", 1, ":var11"),
              (quest_set_slot, ":var6", 23, 2),
              (quest_set_slot, ":var6", 24, 15),
            (try_end),
          (else_try),
            (eq, ":var9", "qst_scout_waypoints"),
            (try_begin),
              (assign, ":var13", 100),
              (assign, "$qst_scout_waypoints_wp_1", -1),
              (assign, "$qst_scout_waypoints_wp_2", -1),
              (assign, "$qst_scout_waypoints_wp_3", -1),
              (assign, ":var14", 0),
              (try_for_range, ":var8", 0, ":var13"),
                (try_begin),
                  (lt, "$qst_scout_waypoints_wp_1", 0),
                  (call_script, "script_cf_get_random_enemy_center_within_range", ":var1", 50),
                  (assign, "$qst_scout_waypoints_wp_1", reg0),
                (try_end),
                (try_begin),
                  (lt, "$qst_scout_waypoints_wp_2", 0),
                  (call_script, "script_cf_get_random_enemy_center_within_range", ":var1", 50),
                  (neq, "$qst_scout_waypoints_wp_1", reg0),
                  (assign, "$qst_scout_waypoints_wp_2", reg0),
                (try_end),
                (try_begin),
                  (lt, "$qst_scout_waypoints_wp_3", 0),
                  (call_script, "script_cf_get_random_enemy_center_within_range", ":var1", 50),
                  (neq, "$qst_scout_waypoints_wp_1", reg0),
                  (neq, "$qst_scout_waypoints_wp_2", reg0),
                  (assign, "$qst_scout_waypoints_wp_3", reg0),
                (try_end),
                (neq, "$qst_scout_waypoints_wp_1", "$qst_scout_waypoints_wp_2"),
                (neq, "$qst_scout_waypoints_wp_1", "$qst_scout_waypoints_wp_2"),
                (neq, "$qst_scout_waypoints_wp_2", "$qst_scout_waypoints_wp_3"),
                (ge, "$qst_scout_waypoints_wp_1", 0),
                (ge, "$qst_scout_waypoints_wp_2", 0),
                (ge, "$qst_scout_waypoints_wp_3", 0),
                (assign, ":var13", 0),
                (assign, ":var14", 1),
              (try_end),
              (eq, ":var14", 1),
              (assign, "$qst_scout_waypoints_wp_1_visited", 0),
              (assign, "$qst_scout_waypoints_wp_2_visited", 0),
              (assign, "$qst_scout_waypoints_wp_3_visited", 0),
              (assign, ":var6", ":var9"),
              (quest_set_slot, ":var6", 23, 7),
              (quest_set_slot, ":var6", 24, 25),
            (try_end),
          (try_end),
        (try_end),
        (try_begin),
          (neq, ":var6", -1),
          (quest_set_slot, ":var6", 11, 0),
          (quest_set_slot, ":var6", 6, ":var0"),
          (try_begin),
            (eq, ":var6", "qst_join_siege_with_army"),
            (jump_to_menu, "mnu_kingdom_army_quest_join_siege_order"),
          (else_try),
            (assign, "$g_random_army_quest", ":var6"),
            (quest_set_slot, "$g_random_army_quest", 6, ":var0"),
            (jump_to_menu, "mnu_kingdom_army_quest_messenger"),
          (try_end),
        (try_end),
      (try_end),
    (else_try),
      (val_add, "$g_player_follow_army_warnings", 1),
      (try_begin),
        (lt, "$g_player_follow_army_warnings", 12),
        (try_begin),
          (store_mod, ":var15", "$g_player_follow_army_warnings", 4),
          (eq, ":var15", 0),
          (str_store_troop_name_link, s1, ":var0"),
          (try_begin),
            (lt, "$g_player_follow_army_warnings", 8),
            (display_message, "@You must follow {s1}!"),
          (else_try),
            (display_message, "@You must follow {s1}! This is your last warning!"),
          (try_end),
        (try_end),
      (else_try),
        (jump_to_menu, "mnu_kingdom_army_follow_failed"),
      (try_end),
    (try_end),
  ]),

  (0.5,
  [
    (check_quest_active, "qst_move_cattle_herd"),
    (neg|check_quest_concluded, "qst_move_cattle_herd"),
    (quest_get_slot, ":var0", "qst_move_cattle_herd", 8),
    (quest_get_slot, ":var1", "qst_move_cattle_herd", 1),
    (store_distance_to_party_from_party, ":var2", ":var0", ":var1"),
    (lt, ":var2", 3),
    (remove_party, ":var0"),
    (call_script, "script_succeed_quest", "qst_move_cattle_herd"),
  ]),

  (0.5,
  [
    (check_quest_active, "qst_move_horses_herd"),
    (neg|check_quest_concluded, "qst_move_horses_herd"),
    (quest_get_slot, ":var0", "qst_move_horses_herd", 8),
    (quest_get_slot, ":var1", "qst_move_horses_herd", 1),
    (store_distance_to_party_from_party, ":var2", ":var0", ":var1"),
    (lt, ":var2", 3),
    (remove_party, ":var0"),
    (call_script, "script_succeed_quest", "qst_move_horses_herd"),
  ]),

  (2,
  [
    (try_for_range, ":var0", "trp_kingdom_1_lord", "trp_knight_1_1_wife"),
      (troop_get_slot, ":var1", ":var0", 10),
      (ge, ":var1", 1),
      (party_slot_eq, ":var1", 31, 1),
      (store_current_hours, ":var2"),
      (neg|party_slot_ge, ":var1", 32, ":var2"),
      (party_set_slot, ":var1", 30, -1),
      (party_set_slot, ":var1", 31, 0),
      (assign, ":var3", 200),
      (store_add, ":var4", ":var2", ":var3"),
      (party_set_slot, ":var1", 33, ":var4"),
    (try_end),
  ]),

  (0.5,
  [
    (try_begin),
      (check_quest_active, "qst_deliver_cattle"),
      (neg|check_quest_succeeded, "qst_deliver_cattle"),
      (quest_get_slot, ":var0", "qst_deliver_cattle", 1),
      (quest_get_slot, ":var1", "qst_deliver_cattle", 10),
      (quest_get_slot, ":var2", "qst_deliver_cattle", 11),
      (store_sub, ":var3", ":var1", ":var2"),
      (call_script, "script_remove_cattles_if_herd_is_close_to_party", ":var0", ":var3"),
      (val_add, ":var2", reg0),
      (quest_set_slot, "qst_deliver_cattle", 11, ":var2"),
      (le, ":var1", ":var2"),
      (call_script, "script_succeed_quest", "qst_deliver_cattle"),
    (try_end),
    (try_begin),
      (check_quest_active, "qst_deliver_cattle_to_army"),
      (neg|check_quest_succeeded, "qst_deliver_cattle_to_army"),
      (quest_get_slot, ":var4", "qst_deliver_cattle_to_army", 6),
      (troop_get_slot, ":var5", ":var4", 10),
      (try_begin),
        (gt, ":var5", 0),
        (quest_get_slot, ":var1", "qst_deliver_cattle_to_army", 10),
        (quest_get_slot, ":var2", "qst_deliver_cattle_to_army", 11),
        (store_sub, ":var3", ":var1", ":var2"),
        (call_script, "script_remove_cattles_if_herd_is_close_to_party", ":var5", ":var3"),
        (val_add, ":var2", reg0),
        (quest_set_slot, "qst_deliver_cattle_to_army", 11, ":var2"),
        (try_begin),
          (le, ":var1", ":var2"),
          (call_script, "script_succeed_quest", "qst_deliver_cattle_to_army"),
        (try_end),
      (else_try),
        (call_script, "script_abort_quest", "qst_deliver_cattle_to_army", 0),
      (try_end),
    (try_end),
  ]),

  (1,
  [
    (neg|map_free),
    (check_quest_active, "qst_train_peasants_against_bandits"),
    (neg|check_quest_concluded, "qst_train_peasants_against_bandits"),
    (eq, "$qst_train_peasants_against_bandits_currently_training", 1),
    (val_add, "$qst_train_peasants_against_bandits_num_hours_trained", 1),
    (call_script, "script_get_max_skill_of_player_party", "skl_trainer"),
    (assign, ":var0", reg0),
    (store_sub, ":var1", 20, ":var0"),
    (val_mul, ":var1", 3),
    (val_div, ":var1", 5),
    (ge, "$qst_train_peasants_against_bandits_num_hours_trained", ":var1"),
    (assign, "$qst_train_peasants_against_bandits_num_hours_trained", 0),
    (rest_for_hours, 0, 0, 0),
    (jump_to_menu, "mnu_train_peasants_against_bandits_ready"),
  ]),

  (1,
  [
    (check_quest_active, "qst_scout_waypoints"),
    (neg|check_quest_succeeded, "qst_scout_waypoints"),
    (try_begin),
      (eq, "$qst_scout_waypoints_wp_1_visited", 0),
      (store_distance_to_party_from_party, ":var0", "$qst_scout_waypoints_wp_1", "p_main_party"),
      (le, ":var0", 3),
      (assign, "$qst_scout_waypoints_wp_1_visited", 1),
      (str_store_party_name_link, s1, "$qst_scout_waypoints_wp_1"),
      (display_message, "@{s1} is scouted."),
    (try_end),
    (try_begin),
      (eq, "$qst_scout_waypoints_wp_2_visited", 0),
      (store_distance_to_party_from_party, ":var0", "$qst_scout_waypoints_wp_2", "p_main_party"),
      (le, ":var0", 3),
      (assign, "$qst_scout_waypoints_wp_2_visited", 1),
      (str_store_party_name_link, s1, "$qst_scout_waypoints_wp_2"),
      (display_message, "@{s1} is scouted."),
    (try_end),
    (try_begin),
      (eq, "$qst_scout_waypoints_wp_3_visited", 0),
      (store_distance_to_party_from_party, ":var0", "$qst_scout_waypoints_wp_3", "p_main_party"),
      (le, ":var0", 3),
      (assign, "$qst_scout_waypoints_wp_3_visited", 1),
      (str_store_party_name_link, s1, "$qst_scout_waypoints_wp_3"),
      (display_message, "@{s1} is scouted."),
    (try_end),
    (eq, "$qst_scout_waypoints_wp_1_visited", 1),
    (eq, "$qst_scout_waypoints_wp_2_visited", 1),
    (eq, "$qst_scout_waypoints_wp_3_visited", 1),
    (call_script, "script_succeed_quest", "qst_scout_waypoints"),
  ]),

  (3,
  [
    (neg|map_free),
    (check_quest_active, "qst_kill_local_merchant"),
    (quest_slot_eq, "qst_kill_local_merchant", 11, 0),
    (quest_set_slot, "qst_kill_local_merchant", 11, 1),
    (rest_for_hours, 0, 0, 0),
    (assign, "$auto_enter_town", "$qst_kill_local_merchant_center"),
    (assign, "$quest_auto_menu", "mnu_kill_local_merchant_begin"),
  ]),

  (1,
  [
    (neg|map_free),
    (check_quest_active, "qst_collect_taxes"),
    (eq, "$g_player_is_captive", 0),
    (eq, "$qst_collect_taxes_currently_collecting", 1),
    (quest_get_slot, ":var0", "qst_collect_taxes", 11),
    (this_or_next|eq, ":var0", 1),
    (this_or_next|eq, ":var0", 2),
    (eq, ":var0", 3),
    (quest_get_slot, ":var1", "qst_collect_taxes", 10),
    (val_sub, ":var1", 1),
    (quest_set_slot, "qst_collect_taxes", 10, ":var1"),
    (call_script, "script_get_max_skill_of_player_party", "skl_trade"),
    (try_begin),
      (lt, ":var1", 0),
      (assign, ":var0", 4),
      (quest_set_slot, "qst_collect_taxes", 11, 4),
      (rest_for_hours, 0, 0, 0),
      (jump_to_menu, "mnu_collect_taxes_complete"),
    (else_try),
      (assign, ":var2", "$qst_collect_taxes_hourly_income"),
      (party_get_slot, ":var3", "$g_encountered_party", 50),
      (store_add, ":var4", 30, ":var3"),
      (val_mul, ":var2", ":var4"),
      (val_div, ":var2", 80),
      (try_begin),
        (eq, "$qst_collect_taxes_halve_taxes", 1),
        (val_div, ":var2", 2),
      (try_end),
      (val_max, ":var2", 2),
      (store_random_in_range, ":var5", 1, ":var2"),
      (quest_get_slot, ":var6", "qst_collect_taxes", 22),
      (val_add, ":var6", ":var5"),
      (quest_set_slot, "qst_collect_taxes", 22, ":var6"),
      (call_script, "script_troop_add_gold", "trp_player", ":var5"),
    (try_end),
    (try_begin),
      (eq, ":var0", 1),
      (val_sub, "$qst_collect_taxes_menu_counter", 1),
      (le, "$qst_collect_taxes_menu_counter", 0),
      (quest_set_slot, "qst_collect_taxes", 11, 2),
      (jump_to_menu, "mnu_collect_taxes_revolt_warning"),
    (else_try),
      (eq, ":var0", 2),
      (val_sub, "$qst_collect_taxes_unrest_counter", 1),
      (le, "$qst_collect_taxes_unrest_counter", 0),
      (eq, "$qst_collect_taxes_halve_taxes", 0),
      (quest_set_slot, "qst_collect_taxes", 11, 3),
      (store_div, ":var7", 10000, "$qst_collect_taxes_total_hours"),
      (val_add, ":var7", 30),
      (store_random_in_range, ":var8", 0, 1000),
      (try_begin),
        (lt, ":var8", ":var7"),
        (jump_to_menu, "mnu_collect_taxes_revolt"),
      (try_end),
    (try_end),
  ]),

  (72,
  [
    (gt, "$g_force_peace_faction_1", 0),
    (gt, "$g_force_peace_faction_2", 0),
    (try_begin),
      (store_relation, ":var0", "$g_force_peace_faction_1", "$g_force_peace_faction_2"),
      (lt, ":var0", 0),
      (call_script, "script_diplomacy_start_peace_between_kingdoms", "$g_force_peace_faction_1", "$g_force_peace_faction_2", 1),
    (try_end),
    (assign, "$g_force_peace_faction_1", 0),
    (assign, "$g_force_peace_faction_2", 0),
  ]),

  (1,
  [
    (try_begin),
      (gt, "$npc_is_quitting", 0),
      (try_begin),
        (main_party_has_troop, "$npc_is_quitting"),
        (neq, "$g_player_is_captive", 1),
        (start_map_conversation, "$npc_is_quitting"),
      (else_try),
        (assign, "$npc_is_quitting", 0),
      (try_end),
    (else_try),
      (gt, "$npc_with_grievance", 0),
      (eq, "$disable_npc_complaints", 0),
      (try_begin),
        (main_party_has_troop, "$npc_with_grievance"),
        (neq, "$g_player_is_captive", 1),
        (assign, "$npc_map_talk_context", 61),
        (start_map_conversation, "$npc_with_grievance"),
      (else_try),
        (assign, "$npc_with_grievance", 0),
      (try_end),
    (else_try),
      (gt, "$npc_with_personality_clash", 0),
      (eq, "$disable_npc_complaints", 0),
      (troop_get_slot, ":var0", "$npc_with_personality_clash", 71),
      (try_begin),
        (main_party_has_troop, "$npc_with_personality_clash"),
        (main_party_has_troop, ":var0"),
        (neq, "$g_player_is_captive", 1),
        (assign, "$npc_map_talk_context", 72),
        (start_map_conversation, "$npc_with_personality_clash"),
      (else_try),
        (assign, "$npc_with_personality_clash", 0),
      (try_end),
    (else_try),
      (eq, "$disable_local_histories", 0),
      (try_for_range, ":var1", "trp_npc1", "trp_kingdom_heroes_including_player_begin"),
        (main_party_has_troop, ":var1"),
        (troop_slot_eq, ":var1", 78, 0),
        (troop_get_slot, ":var2", ":var1", 60),
        (gt, ":var2", 0),
        (store_distance_to_party_from_party, ":var3", ":var2", "p_main_party"),
        (lt, ":var3", 7),
        (assign, "$npc_map_talk_context", 60),
        (start_map_conversation, ":var1"),
      (try_end),
    (try_end),
  ]),

  (4,
  [
    (try_for_range, ":var0", "trp_kingdom_1_lord", "trp_knight_1_1_wife"),
      (troop_slot_ge, ":var0", 55, 1),
      (store_troop_faction, ":var1", ":var0"),
      (troop_get_slot, ":var2", ":var0", 55),
      (troop_get_slot, ":var3", ":var0", 10),
      (assign, ":var4", 0),
      (try_begin),
        (le, ":var3", 0),
        (neg|troop_slot_ge, ":var0", 8, 0),
        (assign, ":var4", 1),
      (else_try),
        (gt, ":var3", 0),
        (party_get_attached_to, ":var5", ":var3"),
        (try_begin),
          (lt, ":var5", 0),
          (party_get_cur_town, ":var5", ":var3"),
        (try_end),
        (neg|this_or_next|is_between, ":var5", "p_town_1", "p_salt_mine"),
        (party_slot_eq, ":var5", 7, ":var0"),
        (assign, ":var6", "trp_knight_1_1_wife"),
        (try_for_range, ":var7", "trp_kingdom_1_lord", ":var6"),
          (troop_get_slot, ":var8", ":var7", 10),
          (gt, ":var8", 0),
          (store_faction_of_party, ":var9", ":var8"),
          (eq, ":var9", ":var1"),
          (store_distance_to_party_from_party, ":var10", ":var3", ":var8"),
          (lt, ":var10", 4),
          (assign, ":var6", 0),
        (try_end),
        (neq, ":var6", 0),
        (assign, ":var4", 1),
      (try_end),
      (eq, ":var4", 1),
      (call_script, "script_change_troop_faction", ":var0", ":var2"),
      (troop_set_slot, ":var0", 55, 0),
      (try_begin),
        (is_between, ":var2", "fac_player_supporters_faction", "fac_kingdoms_end"),
        (str_store_troop_name_link, s1, ":var0"),
        (str_store_faction_name_link, s2, ":var1"),
        (str_store_faction_name_link, s3, ":var2"),
        (display_message, "@{s1} has switched from {s2} to {s3}."),
        (try_begin),
          (eq, ":var1", "$players_kingdom"),
          (call_script, "script_add_notification_menu", "mnu_notification_troop_left_players_faction", ":var0", ":var2"),
        (else_try),
          (eq, ":var2", "$players_kingdom"),
          (call_script, "script_add_notification_menu", "mnu_notification_troop_joined_players_faction", ":var0", ":var1"),
        (try_end),
      (try_end),
    (try_end),
  ]),

  (0.1,
  []),

  (24,
  [
    (neg|check_quest_active, "qst_hunt_down_fugitive"),
    (neg|quest_slot_ge, "qst_hunt_down_fugitive", 25, 1),
    (call_script, "script_update_fugitive_quest"),
  ]),

  (6,
  [
    (neg|check_quest_active, "qst_wanted_fugitive"),
    (assign, "$g_wanted_quest_completed", 0),
    (call_script, "script_setup_wanted_fugitive_quest"),
  ]),

  (1,
  [
    (eq, 0, 1),
    (store_random_in_range, ":var0", "trp_kingdom_1_lord", "trp_knight_1_1_wife"),
    (store_random_in_range, ":var1", "fac_player_supporters_faction", "fac_kingdoms_end"),
    (store_troop_faction, ":var2", ":var0"),
    (neq, ":var2", ":var1"),
    (faction_slot_eq, ":var1", 21, 0),
    (troop_set_slot, ":var0", 55, ":var1"),
    (str_store_troop_name, s1, ":var0"),
    (str_store_faction_name, s2, ":var2"),
    (str_store_faction_name, s3, ":var1"),
    (display_message, "@{s1} is willing to switch from {s2} to {s3}."),
  ]),

  (8,
  [
    (try_for_parties, ":var0"),
      (party_get_template_id, ":var1", ":var0"),
      (eq, ":var1", "pt_stagecoach"),
      (party_is_in_any_town, ":var0"),
      (try_begin),
        (store_random_in_range, ":var2", 0, 100),
        (lt, ":var2", 35),
        (party_get_cur_town, ":var3", ":var0"),
        (assign, ":var4", 1),
        (try_begin),
          (is_between, ":var3", "p_town_1", "p_village_1"),
          (neg|party_slot_eq, ":var3", 54, -1),
          (assign, ":var4", 0),
        (try_end),
        (eq, ":var4", 1),
        (assign, ":var5", 0),
        (try_begin),
          (party_get_slot, ":var6", ":var0", 4),
          (eq, ":var6", 13),
          (party_get_slot, ":var7", ":var0", 5),
          (eq, ":var3", ":var7"),
          (assign, ":var5", 1),
        (try_end),
        (assign, ":var8", -1),
        (try_begin),
          (eq, "$caravan_escort_party_id", ":var0"),
          (neg|party_is_in_town, ":var0", "$caravan_escort_destination_town"),
          (assign, ":var8", "$caravan_escort_destination_town"),
        (else_try),
          (store_random_in_range, reg0, "p_town_1", "p_town_7"),
          (assign, ":var8", reg0),
        (try_end),
        (is_between, ":var8", "p_town_1", "p_castle_1"),
        (neg|party_is_in_town, ":var0", ":var8"),
        (try_begin),
          (eq, ":var5", 1),
          (call_script, "script_do_merchant_town_trade", ":var0", ":var3"),
        (try_end),
        (party_set_ai_behavior, ":var0", ai_bhvr_travel_to_party),
        (party_set_ai_object, ":var0", ":var8"),
        (party_set_flags, ":var0", 65536, 0),
        (party_set_slot, ":var0", 4, 13),
        (party_set_slot, ":var0", 5, ":var8"),
      (try_end),
    (try_end),
  ]),

  (8,
  [
    (try_for_parties, ":var0"),
      (party_get_template_id, ":var1", ":var0"),
      (eq, ":var1", "pt_bank_defenders"),
      (try_begin),
        (party_is_in_any_town, ":var0"),
        (remove_party, ":var0"),
      (try_end),
      (store_distance_to_party_from_party, ":var2", p_main_party, ":var0"),
      (gt, ":var2", 10),
      (party_get_slot, ":var3", ":var0", 123),
      (party_set_ai_behavior, ":var0", ai_bhvr_travel_to_party),
      (party_set_ai_object, ":var0", ":var3"),
    (try_end),
  ]),

  (1,
  [
    (try_for_range, ":var0", "itm_certificate_1", "itm_certificates_end"),
      (try_begin),
        (store_item_kind_count, ":var1", ":var0", "trp_player"),
        (gt, ":var1", 0),
        (item_get_slot, ":var2", ":var0", 11),
        (val_add, ":var2", 1),
        (item_set_slot, ":var0", 11, ":var2"),
      (else_try),
        (item_set_slot, ":var0", 11, 0),
      (try_end),
      (try_begin),
        (store_item_kind_count, ":var1", ":var0", "trp_player"),
        (store_item_kind_count, ":var3", ":var0", "trp_debt"),
        (eq, ":var1", 0),
        (eq, ":var3", 0),
        (assign, ":var4", 0),
        (try_for_range, ":var5", 0, "trp_end"),
          (assign, ":var6", 0),
          (try_begin),
            (is_between, ":var5", "trp_el_paso_chest_1", "trp_chests_end"),
            (assign, ":var6", 1),
          (else_try),
            (is_between, ":var5", "trp_town_1_seneschal", "trp_town_17_seneschal"),
            (assign, ":var6", 1),
          (else_try),
            (is_between, ":var5", "trp_castle_1_seneschal", "trp_castle_12_seneschal"),
            (assign, ":var6", 1),
          (try_end),
          (eq, ":var6", 0),
          (store_item_kind_count, ":var1", ":var0", ":var5"),
          (troop_remove_item, ":var5", ":var0"),
          (assign, ":var4", 1),
        (try_end),
        (eq, ":var4", 1),
        (troop_add_item, "trp_debt", ":var0"),
      (try_end),
    (try_end),
  ]),

  (720,
  [
    (troop_add_gold, "trp_player", "$elpaso_house_rent"),
  ]),

  (0,
  [
    (gt, "$auto_presentation", -1),
    (start_presentation, "$auto_presentation"),
    (assign, "$auto_presentation", -1),
  ]),

  (0.1,
  [
    (call_script, "script_change_random_party_color"),
  ]),

  (0.1,
  [
    (try_for_range, ":var0", 0, "pt_kingdom_7_reinforcements_d"),
      (troop_get_slot, ":var1", "trp_parties_of_template_destroyed", ":var0"),
      (store_num_parties_destroyed_by_player, ":var2", ":var0"),
      (gt, ":var2", ":var1"),
      (try_begin),
        (eq, "$g_party_was_recruited", 1),
        (troop_set_slot, "trp_parties_of_template_destroyed", ":var0", ":var2"),
      (else_try),
        (troop_get_slot, ":var3", "trp_party_template_comm_effect", ":var0"),
        (store_sub, ":var4", ":var2", ":var1"),
        (val_mul, ":var3", ":var4"),
        (call_script, "script_change_player_relation_with_faction", "fac_commoners", ":var3"),
        (troop_get_slot, ":var5", "trp_party_template_other_faction", ":var0"),
        (try_begin),
          (gt, ":var5", 0),
          (troop_get_slot, ":var3", "trp_party_template_other_faction_effect", ":var0"),
          (val_mul, ":var3", ":var4"),
          (call_script, "script_change_player_relation_with_faction", ":var5", ":var3"),
        (try_end),
        (troop_get_slot, ":var3", "trp_party_template_honor_effect", ":var0"),
        (val_mul, ":var3", ":var4"),
        (call_script, "script_change_player_honor", ":var3"),
        (troop_set_slot, "trp_parties_of_template_destroyed", ":var0", ":var2"),
      (try_end),
    (try_end),
    (assign, "$g_party_was_recruited", 0),
  ]),

  (1,
  [
    (call_script, "script_override_unuseable_items"),
  ]),

  (1,
  [
    (assign, ":var0", 1),
    (assign, ":var1", -1),
    (try_begin),
      (eq, "$g_join_chain_gang", 1),
      (store_random_party_of_template, ":var1", "pt_american_chain_gang"),
    (else_try),
      (eq, "$g_join_chain_gang", 2),
      (store_random_party_of_template, ":var1", "pt_mexican_chain_gang"),
    (else_try),
      (assign, ":var0", 0),
    (try_end),
    (eq, ":var0", 1),
    (assign, "$capturer_party", ":var1"),
    (set_camera_follow_party, "$capturer_party"),
    (assign, "$g_player_is_captive", 1),
    (store_random_in_range, ":var2", 36, 60),
    (call_script, "script_event_player_captured_as_prisoner"),
    (call_script, "script_stay_captive_for_hours", ":var2"),
    (assign, "$auto_menu", "mnu_captivity_wilderness_check"),
    (store_troop_gold, ":var3", "trp_player"),
    (troop_remove_gold, "trp_player", ":var3"),
    (call_script, "script_clear_inventory", "trp_player"),
    (troop_add_item, "trp_player", "itm_prisoner_suit"),
    (troop_add_item, "trp_player", "itm_pickaxe"),
    (troop_add_item, "trp_player", "itm_stones"),
    (troop_equip_items, "trp_player"),
    (assign, "$g_join_chain_gang", 0),
  ]),

  (336,
  [
    (assign, ":var0", 0),
    (try_for_range, ":var1", "fac_player_supporters_faction", "fac_kingdoms_end"),
      (faction_slot_eq, ":var1", 21, 0),
      (neq, ":var1", "fac_player_supporters_faction"),
      (call_script, "script_faction_cooldown_will_occur_yn", ":var1"),
      (store_add, ":var0", ":var0", reg1),
    (try_end),
    (try_for_range, ":var2", "fac_imperialists", "fac_minor_end"),
      (faction_slot_eq, ":var2", 21, 0),
      (neq, ":var2", "fac_player_supporters_faction"),
      (call_script, "script_faction_cooldown_will_occur_yn", ":var2"),
      (store_add, ":var0", ":var0", reg1),
    (try_end),
    (try_for_range, ":var2", "fac_commoners", "fac_special_end"),
      (faction_slot_eq, ":var2", 21, 0),
      (neq, ":var2", "fac_player_supporters_faction"),
      (call_script, "script_faction_cooldown_will_occur_yn", ":var2"),
      (store_add, ":var0", ":var0", reg1),
    (try_end),
    (try_begin),
      (gt, ":var0", 0),
      (jump_to_menu, "mnu_faction_cooldown"),
    (try_end),
  ]),

  (2,
  [
    (try_begin),
      (ge, "$player_honor", 25),
      (assign, ":var0", "p_bounty_hunters_dishonorable_ambush"),
      (assign, ":var1", "pt_bounty_hunters_dishonorable"),
    (else_try),
      (le, "$player_honor", -25),
      (assign, ":var0", "p_bounty_hunters_honorable_ambush"),
      (assign, ":var1", "pt_bounty_hunters_honorable"),
    (else_try),
      (assign, ":var0", 0),
      (assign, ":var1", 0),
    (try_end),
    (try_begin),
      (neq, ":var0", 0),
      (eq, "$g_player_is_captive", 0),
      (store_num_parties_of_template, ":var2", ":var1"),
      (eq, ":var2", 0),
      (try_begin),
        (le, "$g_ambush_cooldown_remaining", 0),
        (store_distance_to_party_from_party, ":var3", "p_main_party", ":var0"),
        (gt, ":var3", 10),
        (party_get_position, pos1, "p_main_party"),
        (call_script, "script_map_get_random_position_around_position_within_range", 4, 5),
        (party_set_position, ":var0", pos2),
        (assign, "$g_current_ambush_sprung", 0),
        (assign, "$g_current_ambush_detected", 0),
        (party_set_flags, ":var0", 256, 1),
        (try_begin),
          (eq, "$cheat_mode", 1),
          (display_message, "@DEBUG: relocated bounty hunter ambush location."),
        (try_end),
      (else_try),
        (val_sub, "$g_ambush_cooldown_remaining", 1),
        (assign, reg1, "$g_ambush_cooldown_remaining"),
        (try_begin),
          (eq, "$cheat_mode", 1),
          (display_message, "@DEBUG: Ambush Cooldown Decremented {reg1}"),
        (try_end),
      (try_end),
    (try_end),
    (call_script, "script_destroy_distant_parties_of_template", "pt_bounty_hunters_honorable"),
    (call_script, "script_destroy_distant_parties_of_template", "pt_bounty_hunters_dishonorable"),
  ]),

  (0.3,
  [
    (try_begin),
      (ge, "$player_honor", 25),
      (assign, ":var0", "p_bounty_hunters_dishonorable_ambush"),
      (assign, ":var1", "pt_bounty_hunters_dishonorable"),
    (else_try),
      (le, "$player_honor", -25),
      (assign, ":var0", "p_bounty_hunters_honorable_ambush"),
      (assign, ":var1", "pt_bounty_hunters_honorable"),
    (else_try),
      (assign, ":var0", 0),
      (assign, ":var1", 0),
    (try_end),
    (try_begin),
      (neq, ":var0", 0),
      (eq, "$g_current_ambush_sprung", 0),
      (eq, "$g_player_is_captive", 0),
      (try_begin),
        (store_distance_to_party_from_party, ":var2", "p_main_party", ":var0"),
        (le, ":var2", 1),
        (try_begin),
          (eq, "$cheat_mode", 1),
          (display_message, "@DEBUG: Ambushed!"),
        (try_end),
        (assign, ":var3", "$player_honor"),
        (val_abs, ":var3"),
        (val_min, ":var3", 100),
        (assign, "$g_ambush_cooldown_remaining", 125),
        (val_sub, "$g_ambush_cooldown_remaining", ":var3"),
        (assign, "$g_current_ambush_sprung", 1),
        (party_set_flags, ":var0", 256, 1),
        (call_script, "script_spawn_ambush_party_template", ":var1"),
      (try_end),
    (try_end),
    (try_begin),
      (neq, ":var0", 0),
      (eq, "$g_current_ambush_detected", 0),
      (eq, "$g_current_ambush_sprung", 0),
      (eq, "$g_player_is_captive", 0),
      (try_begin),
        (party_get_skill_level, ":var4", "p_main_party", "skl_spotting"),
        (val_div, ":var4", 2),
        (store_distance_to_party_from_party, ":var2", "p_main_party", ":var0"),
        (le, ":var2", ":var4"),
        (display_message, "@You have detected an ambush using your spotting skill!"),
        (assign, ":var3", "$player_honor"),
        (val_abs, ":var3"),
        (val_min, ":var3", 100),
        (assign, "$g_ambush_cooldown_remaining", 125),
        (val_sub, "$g_ambush_cooldown_remaining", ":var3"),
        (val_div, "$g_ambush_cooldown_remaining", 3),
        (assign, "$g_current_ambush_detected", 1),
        (party_set_flags, ":var0", 256, 0),
      (try_end),
    (try_end),
  ]),

  (0.3,
  [
    (eq, "$g_player_is_captive", 1),
    (party_slot_eq, "$capturer_party", 0, 21),
    (get_party_ai_behavior, ":var0", "$capturer_party"),
    (eq, ":var0", 1),
    (get_party_ai_object, ":var1", "$capturer_party"),
    (party_get_position, pos1, "$capturer_party"),
    (party_get_position, pos2, ":var1"),
    (get_distance_between_positions, ":var2", pos1, pos2),
    (lt, ":var2", 50),
    (try_begin),
      (eq, "$cheat_mode", 1),
      (display_message, "@DEBUG: You have been turned in for a bounty!"),
    (try_end),
    (jump_to_menu, "mnu_captivity_bounty_claimed_taken_prisoner"),
  ]),

]